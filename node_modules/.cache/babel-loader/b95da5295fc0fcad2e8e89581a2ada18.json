{"ast":null,"code":"var _jsxFileName = \"/home/deathsmell/WebstormProjects/i-note-common/src/components/Note.js\";\nimport React, { useEffect, useRef, useState } from \"react\";\nimport { Rnd } from \"react-rnd\";\nconst style = {\n  display: \"flex\",\n  alignItems: \"center\",\n  justifyContent: \"center\",\n  border: \"solid 1px #ddd\",\n  background: \"#f0f0f0\"\n};\n\nconst Note = ({\n  getFromLocal,\n  saveInLocal,\n  index,\n  state,\n  setState\n}) => {\n  const [transformNote, setTransformNote] = useState(false);\n  const [text, setText] = useState('');\n  const rnd = useRef();\n\n  const updateState = (width, height, x, y) => {\n    let newState = [...state];\n    newState[index] = {\n      width: width || state[index].width,\n      height: height || state[index].height,\n      x: ~x ? x : state[index].x,\n      y: ~y ? y : state[index].y\n    };\n    return newState;\n  };\n\n  const savePositionWhenTransformation = () => {\n    if (transformNote && (state[index].x !== 0 || state[index].y !== 0)) {\n      saveInLocal(index, { ...state[index],\n        x: state[index].x,\n        y: state[index].y\n      });\n      const updateState1 = updateState(null, null, 0, 0);\n      setState(updateState1);\n    } else if (state[index].x === 0 && state[index].y === 0) {\n      const stringPosition = getFromLocal(index);\n\n      if (stringPosition) {\n        const parse = JSON.parse(stringPosition);\n        setState(updateState(parse.width, parse.height, parse.x, parse.y));\n      }\n    }\n  };\n\n  useEffect(savePositionWhenTransformation, [transformNote]);\n\n  const onDragStopHandler = (event, data) => {\n    const newState = updateState(null, null, data.x, data.y);\n    saveInLocal(index, newState[index]);\n    setState(newState);\n  };\n\n  const onResizeStopHandler = (e, direction, ref, delta, position) => {\n    setState(updateState(ref.style.width, ref.style.height, position.x, position.y));\n  };\n\n  return /*#__PURE__*/React.createElement(Rnd, {\n    ref: rnd,\n    className: `note${transformNote ? '-activate' : ''}`,\n    disableDragging: transformNote,\n    style: { ...style\n    },\n    size: {\n      width: state[index].width,\n      height: state[index].height\n    },\n    minWidth: 250,\n    minHeight: 250,\n    position: {\n      x: state[index].x,\n      y: state[index].y\n    },\n    onDragStop: onDragStopHandler,\n    onResizeStop: onResizeStopHandler,\n    bounds: \"window\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"note-header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"color-buttons\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn btn-success\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn btn-danger\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn btn-secondary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"cross\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 17\n    }\n  }, \"\\xD7\")), transformNote ? /*#__PURE__*/React.createElement(\"textarea\", {\n    className: \"note-text\",\n    style: {\n      resize: 'none',\n      backgroundColor: \"grey\",\n      width: '100%',\n      height: \"100%\"\n    },\n    value: text,\n    onChange: e => setText(e.target.value),\n    onDoubleClick: () => setTransformNote(false),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 25\n    }\n  }) : /*#__PURE__*/React.createElement(\"div\", {\n    className: \"note-body\",\n    style: {\n      backgroundColor: 'grey'\n    },\n    onDoubleClick: () => setTransformNote(true),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 25\n    }\n  }, text));\n};\n\nexport default Note;","map":{"version":3,"sources":["/home/deathsmell/WebstormProjects/i-note-common/src/components/Note.js"],"names":["React","useEffect","useRef","useState","Rnd","style","display","alignItems","justifyContent","border","background","Note","getFromLocal","saveInLocal","index","state","setState","transformNote","setTransformNote","text","setText","rnd","updateState","width","height","x","y","newState","savePositionWhenTransformation","updateState1","stringPosition","parse","JSON","onDragStopHandler","event","data","onResizeStopHandler","e","direction","ref","delta","position","resize","backgroundColor","target","value"],"mappings":"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","sourcesContent":["import React, {useEffect, useRef, useState} from \"react\"\nimport {Rnd} from \"react-rnd\"\n\nconst style = {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    border: \"solid 1px #ddd\",\n    background: \"#f0f0f0\",\n};\n\nconst Note = ({getFromLocal, saveInLocal, index, state, setState}) => {\n\n\n    const [transformNote, setTransformNote] = useState(false);\n    const [text, setText] = useState('');\n    const rnd = useRef();\n\n    const updateState = (width,height,x,y) => {\n        let newState = [...state]\n        newState[index] = {\n            width: width || state[index].width,\n            height: height || state[index].height,\n            x: ~x ? x : state[index].x,\n            y: ~y ? y : state[index].y,\n        }\n        return newState\n    }\n\n    const savePositionWhenTransformation = () => {\n        if (transformNote && (state[index].x !== 0 || state[index].y !== 0)) {\n            saveInLocal(index, {...state[index], x: state[index].x, y: state[index].y});\n            const updateState1 = updateState(null,null,0,0);\n            setState(updateState1)\n        } else if (state[index].x === 0 && state[index].y === 0) {\n            const stringPosition = getFromLocal(index)\n            if (stringPosition) {\n                const parse = JSON.parse(stringPosition);\n                setState(updateState(parse.width,parse.height,parse.x,parse.y))\n            }\n        }\n    };\n\n    useEffect(savePositionWhenTransformation, [transformNote])\n\n\n    const onDragStopHandler = (event, data) => {\n        const newState = updateState(null,null,data.x,data.y);\n        saveInLocal(index, newState[index])\n        setState(newState)\n    }\n\n    const onResizeStopHandler = (e, direction, ref, delta, position) => {\n        setState(updateState(ref.style.width, ref.style.height,position.x, position.y));\n    }\n\n    return (\n        <Rnd\n            ref={rnd}\n            className={`note${transformNote ? '-activate' : ''}`}\n            disableDragging={transformNote}\n            style={{...style}}\n            size={{width: state[index].width, height: state[index].height}}\n            minWidth={250}\n            minHeight={250}\n            position={{x: state[index].x, y: state[index].y}}\n            onDragStop={onDragStopHandler}\n            onResizeStop={onResizeStopHandler}\n            bounds={\"window\"}\n        >\n            <div className=\"note-header\">\n                <div className=\"color-buttons\">\n                    <button className=\"btn btn-success\"/>\n                    <button className=\"btn btn-danger\"/>\n                    <button className=\"btn btn-secondary\"/>\n                </div>\n                <div className=\"cross\">\n                    &times;\n                </div>\n            </div>\n            {\n                transformNote\n                    ?\n                    (\n                        <textarea\n                            className=\"note-text\"\n                            style={{resize: 'none', backgroundColor: \"grey\", width: '100%', height: \"100%\"}}\n                            value={text}\n                            onChange={(e) => setText(e.target.value)}\n                            onDoubleClick={() => setTransformNote(false)}\n                        >\n\n                            </textarea>\n                    )\n                    : (\n                        <div className=\"note-body\"\n                             style={{backgroundColor: 'grey'}}\n                             onDoubleClick={() => setTransformNote(true)}\n                        >\n                            {text}\n                        </div>\n                    )\n            }\n        </Rnd>\n    )\n}\n\nexport default Note"]},"metadata":{},"sourceType":"module"}