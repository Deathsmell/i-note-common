{"ast":null,"code":"var _jsxFileName = \"/home/deathsmell/WebstormProjects/i-note-common/src/App.js\";\nimport React, { useCallback, useEffect, useState } from \"react\";\nimport Note from \"./components/Note\";\nimport useWS from \"./hooks/ws.hook\";\nimport useNote from \"./hooks/note.hook\";\nimport { TypeMessage } from \"./hooks/TypeMessage\";\nimport useLocal from \"./hooks/local.hook\";\n\nconst App = () => {\n  const {\n    defaultNote,\n    updateNote\n  } = useNote();\n  const [notes, setNotes] = useState([]);\n  const {\n    saveInLocal,\n    getFromLocal,\n    removeInLocal\n  } = useLocal();\n  const {\n    connection\n  } = useWS(notes, setNotes); // useEffect(() => {\n  //     console.log(notes.length);\n  // }, [notes])\n\n  const createHandler = e => {\n    const newNote = updateNote(defaultNote, {\n      x: e.clientX,\n      y: e.clientY,\n      type: TypeMessage.CREATE\n    });\n    connection.send(JSON.stringify(newNote));\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      backgroundColor: \"aqua\",\n      width: \"100vw\",\n      height: '100vh',\n      cursor: 'pointer'\n    },\n    onDoubleClick: createHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }\n  }, notes && notes.map((note, index) => {\n    return /*#__PURE__*/React.createElement(Note, {\n      key: index,\n      noteIndex: index,\n      note: note,\n      noteId: note.id,\n      notes: notes,\n      setNotes: setNotes,\n      serverText: note.text,\n      connection: connection,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 25\n      }\n    });\n  }));\n};\n\nexport default App;","map":{"version":3,"sources":["/home/deathsmell/WebstormProjects/i-note-common/src/App.js"],"names":["React","useCallback","useEffect","useState","Note","useWS","useNote","TypeMessage","useLocal","App","defaultNote","updateNote","notes","setNotes","saveInLocal","getFromLocal","removeInLocal","connection","createHandler","e","newNote","x","clientX","y","clientY","type","CREATE","send","JSON","stringify","backgroundColor","width","height","cursor","map","note","index","id","text"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,WAAf,EAA4BC,SAA5B,EAAuCC,QAAvC,QAAsD,OAAtD;AACA,OAAOC,IAAP,MAAiB,mBAAjB;AACA,OAAOC,KAAP,MAAkB,iBAAlB;AACA,OAAOC,OAAP,MAAoB,mBAApB;AACA,SAAQC,WAAR,QAA0B,qBAA1B;AACA,OAAOC,QAAP,MAAqB,oBAArB;;AAGA,MAAMC,GAAG,GAAG,MAAM;AAGd,QAAM;AAACC,IAAAA,WAAD;AAAcC,IAAAA;AAAd,MAA4BL,OAAO,EAAzC;AACA,QAAM,CAACM,KAAD,EAAQC,QAAR,IAAoBV,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM;AAACW,IAAAA,WAAD;AAAcC,IAAAA,YAAd;AAA4BC,IAAAA;AAA5B,MAA6CR,QAAQ,EAA3D;AAEA,QAAM;AAACS,IAAAA;AAAD,MAAeZ,KAAK,CAACO,KAAD,EAAOC,QAAP,CAA1B,CAPc,CASd;AACA;AACA;;AAEA,QAAMK,aAAa,GAAIC,CAAD,IAAO;AACzB,UAAMC,OAAO,GAAGT,UAAU,CAACD,WAAD,EAAc;AAACW,MAAAA,CAAC,EAAEF,CAAC,CAACG,OAAN;AAAeC,MAAAA,CAAC,EAAEJ,CAAC,CAACK,OAApB;AAA6BC,MAAAA,IAAI,EAAElB,WAAW,CAACmB;AAA/C,KAAd,CAA1B;AACAT,IAAAA,UAAU,CAACU,IAAX,CAAgBC,IAAI,CAACC,SAAL,CAAeT,OAAf,CAAhB;AACH,GAHD;;AAKA,sBACI;AAAK,IAAA,KAAK,EAAE;AAACU,MAAAA,eAAe,EAAE,MAAlB;AAA0BC,MAAAA,KAAK,EAAE,OAAjC;AAA0CC,MAAAA,MAAM,EAAE,OAAlD;AAA2DC,MAAAA,MAAM,EAAE;AAAnE,KAAZ;AACK,IAAA,aAAa,EAAEf,aADpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAGKN,KAAK,IACNA,KAAK,CAACsB,GAAN,CAAU,CAACC,IAAD,EAAOC,KAAP,KAAiB;AACnB,wBACI,oBAAC,IAAD;AAAM,MAAA,GAAG,EAAEA,KAAX;AACM,MAAA,SAAS,EAAEA,KADjB;AAEM,MAAA,IAAI,EAAED,IAFZ;AAGM,MAAA,MAAM,EAAEA,IAAI,CAACE,EAHnB;AAIM,MAAA,KAAK,EAAEzB,KAJb;AAKM,MAAA,QAAQ,EAAEC,QALhB;AAMM,MAAA,UAAU,EAAEsB,IAAI,CAACG,IANvB;AAOM,MAAA,UAAU,EAAErB,UAPlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ;AAWH,GAZL,CAJJ,CADJ;AAsBH,CAxCD;;AA2CA,eAAeR,GAAf","sourcesContent":["import React, {useCallback, useEffect, useState} from \"react\"\nimport Note from \"./components/Note\";\nimport useWS from \"./hooks/ws.hook\";\nimport useNote from \"./hooks/note.hook\";\nimport {TypeMessage} from \"./hooks/TypeMessage\";\nimport useLocal from \"./hooks/local.hook\";\n\n\nconst App = () => {\n\n\n    const {defaultNote, updateNote} = useNote();\n    const [notes, setNotes] = useState([]);\n    const {saveInLocal, getFromLocal, removeInLocal} = useLocal();\n\n    const {connection} = useWS(notes,setNotes);\n\n    // useEffect(() => {\n    //     console.log(notes.length);\n    // }, [notes])\n\n    const createHandler = (e) => {\n        const newNote = updateNote(defaultNote, {x: e.clientX, y: e.clientY, type: TypeMessage.CREATE});\n        connection.send(JSON.stringify(newNote))\n    }\n\n    return (\n        <div style={{backgroundColor: \"aqua\", width: \"100vw\", height: '100vh', cursor: 'pointer'}}\n             onDoubleClick={createHandler}\n        >\n            {notes &&\n            notes.map((note, index) => {\n                    return (\n                        <Note key={index}\n                              noteIndex={index}\n                              note={note}\n                              noteId={note.id}\n                              notes={notes}\n                              setNotes={setNotes}\n                              serverText={note.text}\n                              connection={connection}\n                        />\n                    )\n                }\n            )\n            }\n        </div>\n    )\n}\n\n\nexport default App"]},"metadata":{},"sourceType":"module"}