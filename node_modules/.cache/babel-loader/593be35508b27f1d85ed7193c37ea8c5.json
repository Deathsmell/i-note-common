{"ast":null,"code":"var _jsxFileName = \"/home/deathsmell/WebstormProjects/i-note-common/src/App.js\";\nimport React, { useEffect, useState } from \"react\";\nimport { Rnd } from \"react-rnd\";\nimport update from 'immutability-helper';\nconst style = {\n  display: \"flex\",\n  alignItems: \"center\",\n  justifyContent: \"center\",\n  border: \"solid 1px #ddd\",\n  background: \"#f0f0f0\"\n};\nconst cross = {\n  position: 'absolute',\n  width: '2%',\n  height: '2%',\n  left: '90%',\n  top: '2%',\n  cursor: 'pointer'\n};\n\nconst App = () => {\n  const [transformNote, setTransformNote] = useState(false);\n  const [text, setText] = useState('');\n  const [state, setState] = useState({\n    width: 200,\n    height: 200,\n    x: 0,\n    y: 0\n  });\n\n  const savePositionWhenTransformation = () => {\n    console.log(\"change\", state.x !== 0);\n\n    if (state.x !== 0 || state.y !== 0) {\n      localStorage.setItem('position', JSON.stringify({\n        x: state.x,\n        y: state.y\n      }));\n      setState({ ...state,\n        x: 0,\n        y: 0\n      });\n    } else if (state.x === 0 && state.y === 0) {\n      const stringPosition = localStorage.getItem('position');\n\n      if (stringPosition) {\n        const {\n          x,\n          y\n        } = JSON.parse(stringPosition);\n        setState({ ...state,\n          x,\n          y\n        });\n      }\n    }\n  };\n\n  const getPositionIfRefreshPage = () => {\n    if (state.x === 0 && state.y === 0) {\n      const stringPosition = localStorage.getItem('position');\n\n      if (stringPosition) {\n        const {\n          x,\n          y\n        } = JSON.parse(stringPosition);\n        setState({ ...state,\n          x,\n          y\n        });\n      }\n    }\n  };\n\n  useEffect(getPositionIfRefreshPage, []);\n  useEffect(savePositionWhenTransformation, [transformNote]);\n\n  const onDragStopHandler = (event, data) => {\n    setState(update(state, {\n      $merge: {\n        x: data.x,\n        y: data.y\n      }\n    }));\n  };\n\n  const onResizeStopHandler = (e, direction, ref, delta, position) => {\n    console.log(\"direction\", direction);\n    console.log(\"ref\", ref);\n    console.log('delta', delta);\n    console.log(\"position\", position);\n    setState({\n      width: ref.style.width,\n      height: ref.style.height,\n      ...position\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(Rnd, {\n    className: `${transformNote ? 'note' : ''}`,\n    disableDragging: transformNote,\n    style: { ...style,\n      transition: 'width height 1s'\n    },\n    size: {\n      width: state.width,\n      height: state.height\n    },\n    minWidth: 100,\n    minHeight: 100,\n    position: {\n      x: state.x,\n      y: state.y\n    },\n    onDragStop: onDragStopHandler,\n    onResizeStop: onResizeStopHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: cross,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 13\n    }\n  }, \"\\xD7\"), transformNote ? /*#__PURE__*/React.createElement(\"textarea\", {\n    className: \"h-100 w-100\",\n    style: {\n      resize: 'none',\n      backgroundColor: \"grey\"\n    },\n    value: text,\n    onChange: e => setText(e.target.value),\n    onDoubleClick: () => setTransformNote(false),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 25\n    }\n  }) : /*#__PURE__*/React.createElement(\"div\", {\n    className: \"h-100 w-100\",\n    style: {\n      backgroundColor: 'grey'\n    },\n    onDoubleClick: () => setTransformNote(true),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 25\n    }\n  }, text));\n};\n\nexport default App;","map":{"version":3,"sources":["/home/deathsmell/WebstormProjects/i-note-common/src/App.js"],"names":["React","useEffect","useState","Rnd","update","style","display","alignItems","justifyContent","border","background","cross","position","width","height","left","top","cursor","App","transformNote","setTransformNote","text","setText","state","setState","x","y","savePositionWhenTransformation","console","log","localStorage","setItem","JSON","stringify","stringPosition","getItem","parse","getPositionIfRefreshPage","onDragStopHandler","event","data","$merge","onResizeStopHandler","e","direction","ref","delta","transition","resize","backgroundColor","target","value"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AACA,SAAQC,GAAR,QAAkB,WAAlB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AAEA,MAAMC,KAAK,GAAG;AACVC,EAAAA,OAAO,EAAE,MADC;AAEVC,EAAAA,UAAU,EAAE,QAFF;AAGVC,EAAAA,cAAc,EAAE,QAHN;AAIVC,EAAAA,MAAM,EAAE,gBAJE;AAKVC,EAAAA,UAAU,EAAE;AALF,CAAd;AAQA,MAAMC,KAAK,GAAG;AACVC,EAAAA,QAAQ,EAAE,UADA;AAEVC,EAAAA,KAAK,EAAE,IAFG;AAGVC,EAAAA,MAAM,EAAE,IAHE;AAIVC,EAAAA,IAAI,EAAE,KAJI;AAKVC,EAAAA,GAAG,EAAE,IALK;AAMVC,EAAAA,MAAM,EAAE;AANE,CAAd;;AAQA,MAAMC,GAAG,GAAG,MAAM;AAEd,QAAM,CAACC,aAAD,EAAgBC,gBAAhB,IAAoClB,QAAQ,CAAC,KAAD,CAAlD;AACA,QAAM,CAACmB,IAAD,EAAOC,OAAP,IAAkBpB,QAAQ,CAAC,EAAD,CAAhC;AAEA,QAAM,CAACqB,KAAD,EAAQC,QAAR,IAAoBtB,QAAQ,CAAC;AAC/BW,IAAAA,KAAK,EAAE,GADwB;AAE/BC,IAAAA,MAAM,EAAE,GAFuB;AAG/BW,IAAAA,CAAC,EAAE,CAH4B;AAI/BC,IAAAA,CAAC,EAAE;AAJ4B,GAAD,CAAlC;;AAOA,QAAMC,8BAA8B,GAAG,MAAM;AACzCC,IAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBN,KAAK,CAACE,CAAN,KAAY,CAAlC;;AACA,QAAIF,KAAK,CAACE,CAAN,KAAY,CAAZ,IAAiBF,KAAK,CAACG,CAAN,KAAY,CAAjC,EAAoC;AAChCI,MAAAA,YAAY,CAACC,OAAb,CAAqB,UAArB,EAAiCC,IAAI,CAACC,SAAL,CAAe;AAACR,QAAAA,CAAC,EAAEF,KAAK,CAACE,CAAV;AAAaC,QAAAA,CAAC,EAAEH,KAAK,CAACG;AAAtB,OAAf,CAAjC;AACAF,MAAAA,QAAQ,CACJ,EAAC,GAAGD,KAAJ;AAAWE,QAAAA,CAAC,EAAE,CAAd;AAAiBC,QAAAA,CAAC,EAAE;AAApB,OADI,CAAR;AAGH,KALD,MAKO,IAAIH,KAAK,CAACE,CAAN,KAAY,CAAZ,IAAiBF,KAAK,CAACG,CAAN,KAAY,CAAjC,EAAoC;AACvC,YAAMQ,cAAc,GAAGJ,YAAY,CAACK,OAAb,CAAqB,UAArB,CAAvB;;AACA,UAAID,cAAJ,EAAoB;AAChB,cAAM;AAACT,UAAAA,CAAD;AAAIC,UAAAA;AAAJ,YAASM,IAAI,CAACI,KAAL,CAAWF,cAAX,CAAf;AACAV,QAAAA,QAAQ,CAAC,EACL,GAAGD,KADE;AAELE,UAAAA,CAFK;AAEFC,UAAAA;AAFE,SAAD,CAAR;AAIH;AACJ;AACJ,GAjBD;;AAmBA,QAAMW,wBAAwB,GAAG,MAAM;AACnC,QAAId,KAAK,CAACE,CAAN,KAAY,CAAZ,IAAiBF,KAAK,CAACG,CAAN,KAAY,CAAjC,EAAoC;AAChC,YAAMQ,cAAc,GAAGJ,YAAY,CAACK,OAAb,CAAqB,UAArB,CAAvB;;AACA,UAAID,cAAJ,EAAoB;AAChB,cAAM;AAACT,UAAAA,CAAD;AAAIC,UAAAA;AAAJ,YAASM,IAAI,CAACI,KAAL,CAAWF,cAAX,CAAf;AACAV,QAAAA,QAAQ,CAAC,EACL,GAAGD,KADE;AAELE,UAAAA,CAFK;AAEFC,UAAAA;AAFE,SAAD,CAAR;AAIH;AACJ;AACJ,GAXD;;AAaAzB,EAAAA,SAAS,CAACoC,wBAAD,EAA0B,EAA1B,CAAT;AACApC,EAAAA,SAAS,CAAC0B,8BAAD,EAAiC,CAACR,aAAD,CAAjC,CAAT;;AAGA,QAAMmB,iBAAiB,GAAG,CAACC,KAAD,EAAQC,IAAR,KAAiB;AACvChB,IAAAA,QAAQ,CAACpB,MAAM,CAACmB,KAAD,EACX;AAACkB,MAAAA,MAAM,EAAE;AAAChB,QAAAA,CAAC,EAAEe,IAAI,CAACf,CAAT;AAAYC,QAAAA,CAAC,EAAEc,IAAI,CAACd;AAApB;AAAT,KADW,CAAP,CAAR;AAIH,GALD;;AAOA,QAAMgB,mBAAmB,GAAG,CAACC,CAAD,EAAIC,SAAJ,EAAeC,GAAf,EAAoBC,KAApB,EAA2BlC,QAA3B,KAAwC;AAChEgB,IAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAyBe,SAAzB;AACAhB,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ,EAAmBgB,GAAnB;AACAjB,IAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBiB,KAArB;AACAlB,IAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBjB,QAAxB;AACAY,IAAAA,QAAQ,CAAC;AACLX,MAAAA,KAAK,EAAEgC,GAAG,CAACxC,KAAJ,CAAUQ,KADZ;AAELC,MAAAA,MAAM,EAAE+B,GAAG,CAACxC,KAAJ,CAAUS,MAFb;AAGL,SAAGF;AAHE,KAAD,CAAR;AAKH,GAVD;;AAYA,sBACI,oBAAC,GAAD;AACI,IAAA,SAAS,EAAG,GAAEO,aAAa,GAAG,MAAH,GAAY,EAAG,EAD9C;AAEI,IAAA,eAAe,EAAEA,aAFrB;AAGI,IAAA,KAAK,EAAE,EAAC,GAAGd,KAAJ;AAAW0C,MAAAA,UAAU,EAAE;AAAvB,KAHX;AAII,IAAA,IAAI,EAAE;AAAClC,MAAAA,KAAK,EAAEU,KAAK,CAACV,KAAd;AAAqBC,MAAAA,MAAM,EAAES,KAAK,CAACT;AAAnC,KAJV;AAKI,IAAA,QAAQ,EAAE,GALd;AAMI,IAAA,SAAS,EAAE,GANf;AAOI,IAAA,QAAQ,EAAE;AAACW,MAAAA,CAAC,EAAEF,KAAK,CAACE,CAAV;AAAaC,MAAAA,CAAC,EAAEH,KAAK,CAACG;AAAtB,KAPd;AAQI,IAAA,UAAU,EAAEY,iBARhB;AASI,IAAA,YAAY,EAAEI,mBATlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAWI;AAAK,IAAA,KAAK,EAAE/B,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAXJ,EAeQQ,aAAa,gBAGL;AACI,IAAA,SAAS,EAAC,aADd;AAEI,IAAA,KAAK,EAAE;AAAC6B,MAAAA,MAAM,EAAE,MAAT;AAAiBC,MAAAA,eAAe,EAAE;AAAlC,KAFX;AAGI,IAAA,KAAK,EAAE5B,IAHX;AAII,IAAA,QAAQ,EAAGsB,CAAD,IAAOrB,OAAO,CAACqB,CAAC,CAACO,MAAF,CAASC,KAAV,CAJ5B;AAKI,IAAA,aAAa,EAAE,MAAM/B,gBAAgB,CAAC,KAAD,CALzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHK,gBAcL;AAAK,IAAA,SAAS,EAAC,aAAf;AACK,IAAA,KAAK,EAAE;AAAC6B,MAAAA,eAAe,EAAE;AAAlB,KADZ;AAEK,IAAA,aAAa,EAAE,MAAM7B,gBAAgB,CAAC,IAAD,CAF1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAIKC,IAJL,CA7BhB,CADJ;AAwCH,CA3GD;;AA6GA,eAAeH,GAAf","sourcesContent":["import React, {useEffect, useState} from \"react\"\nimport {Rnd} from \"react-rnd\"\nimport update from 'immutability-helper'\n\nconst style = {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    border: \"solid 1px #ddd\",\n    background: \"#f0f0f0\",\n};\n\nconst cross = {\n    position: 'absolute',\n    width: '2%',\n    height: '2%',\n    left: '90%',\n    top: '2%',\n    cursor: 'pointer',\n}\nconst App = () => {\n\n    const [transformNote, setTransformNote] = useState(false);\n    const [text, setText] = useState('');\n\n    const [state, setState] = useState({\n        width: 200,\n        height: 200,\n        x: 0,\n        y: 0\n    });\n\n    const savePositionWhenTransformation = () => {\n        console.log(\"change\", state.x !== 0)\n        if (state.x !== 0 || state.y !== 0) {\n            localStorage.setItem('position', JSON.stringify({x: state.x, y: state.y}))\n            setState(\n                {...state, x: 0, y: 0}\n            )\n        } else if (state.x === 0 && state.y === 0) {\n            const stringPosition = localStorage.getItem('position');\n            if (stringPosition) {\n                const {x, y} = JSON.parse(stringPosition);\n                setState({\n                    ...state,\n                    x, y\n                })\n            }\n        }\n    };\n\n    const getPositionIfRefreshPage = () => {\n        if (state.x === 0 && state.y === 0) {\n            const stringPosition = localStorage.getItem('position');\n            if (stringPosition) {\n                const {x, y} = JSON.parse(stringPosition);\n                setState({\n                    ...state,\n                    x, y\n                })\n            }\n        }\n    }\n\n    useEffect(getPositionIfRefreshPage,[])\n    useEffect(savePositionWhenTransformation, [transformNote])\n\n\n    const onDragStopHandler = (event, data) => {\n        setState(update(state,\n            {$merge: {x: data.x, y: data.y}}\n            )\n        )\n    }\n\n    const onResizeStopHandler = (e, direction, ref, delta, position) => {\n        console.log(\"direction\", direction);\n        console.log(\"ref\", ref);\n        console.log('delta', delta)\n        console.log(\"position\", position);\n        setState({\n            width: ref.style.width,\n            height: ref.style.height,\n            ...position\n        });\n    }\n\n    return (\n        <Rnd\n            className={`${transformNote ? 'note' : ''}`}\n            disableDragging={transformNote}\n            style={{...style, transition: 'width height 1s'}}\n            size={{width: state.width, height: state.height}}\n            minWidth={100}\n            minHeight={100}\n            position={{x: state.x, y: state.y}}\n            onDragStop={onDragStopHandler}\n            onResizeStop={onResizeStopHandler}\n        >\n            <div style={cross}>\n                &times;\n            </div>\n            {\n                transformNote\n                    ?\n                    (\n                        <textarea\n                            className=\"h-100 w-100\"\n                            style={{resize: 'none', backgroundColor: \"grey\"}}\n                            value={text}\n                            onChange={(e) => setText(e.target.value)}\n                            onDoubleClick={() => setTransformNote(false)}\n                        >\n\n                            </textarea>\n                    )\n                    : (\n                        <div className=\"h-100 w-100\"\n                             style={{backgroundColor: 'grey'}}\n                             onDoubleClick={() => setTransformNote(true)}\n                        >\n                            {text}\n                        </div>\n                    )\n            }\n        </Rnd>\n    )\n}\n\nexport default App"]},"metadata":{},"sourceType":"module"}