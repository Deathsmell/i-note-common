{"ast":null,"code":"var _jsxFileName = \"/home/deathsmell/WebstormProjects/i-note-common/src/components/Note.jsx\";\nimport React, { useCallback, useEffect, useState } from \"react\";\nimport { Rnd } from \"react-rnd\";\nimport useNote from \"../hooks/note.hook\";\nimport { TypeMessage } from \"../hooks/TypeMessage\";\nimport { markdown } from 'markdown';\n\nconst Note = ({\n  note,\n  color,\n  noteIndex,\n  notes,\n  setNotes,\n  connection\n}) => {\n  const [isDragging, setIsDragging] = useState(false);\n  const [changed, setChanged] = useState(false);\n  const [zIndex, setZIndex] = useState(1);\n  const [text, setText] = useState(note.text);\n  const [mdText, setMdText] = useState(markdown.toHTML(note.text));\n  const {\n    updateNote\n  } = useNote();\n  useEffect(() => {\n    return () => {\n      setZIndex(1);\n    };\n  }, []);\n\n  const updateStateNotes = updatedNote => {\n    setNotes(() => [...notes.filter(note => note.id !== updatedNote.id), updatedNote]);\n  };\n\n  const sendNewPosition = (type, note) => connection.send(JSON.stringify({ ...note,\n    type\n  }));\n\n  const onDragStopHandler = (event, data) => {\n    const updatedNote = updateNote(note, {\n      x: data.x,\n      y: data.y\n    });\n    sendNewPosition(TypeMessage.UPDATE, updatedNote);\n    updateStateNotes(updatedNote);\n  };\n\n  const onResizeStopHandler = (e, direction, ref, delta, position) => {\n    const updatedNote = updateNote(note, {\n      width: ref.style.width,\n      height: ref.style.height,\n      x: position.x,\n      y: position.y\n    });\n    updateStateNotes(updatedNote);\n    sendNewPosition(TypeMessage.UPDATE, updatedNote);\n  };\n\n  const deleteNoteHandler = () => {\n    sendNewPosition(TypeMessage.DELETE, note);\n    setNotes(prev => [...prev.filter(noteFromState => noteFromState.id !== note.id)]);\n  };\n\n  const changeColorHandler = e => {\n    const changeColor = e.target.className.trim().replace(/^btn\\s*/, '');\n    const b = changeColor !== color;\n    console.log(b);\n\n    if (b) {\n      const updatedNote = updateNote(note, {\n        color: changeColor\n      });\n      updateStateNotes(updatedNote);\n      sendNewPosition(TypeMessage.UPDATE, updatedNote);\n    }\n  };\n\n  const changeTextHandler = e => {\n    const text = e.target.value;\n    setMdText(markdown.toHTML(text));\n    setText(text);\n  };\n\n  useEffect(function saveChangeText() {\n    if (!changed) {\n      const updatedNote = updateNote(note, {\n        text\n      });\n      updateStateNotes(updatedNote);\n      sendNewPosition(TypeMessage.UPDATE, updatedNote);\n    }\n  }, []);\n  const createMarkup = useCallback(() => {\n    return {\n      __html: mdText\n    };\n  }, [mdText]);\n  return /*#__PURE__*/React.createElement(Rnd, {\n    className: \"note\",\n    disableDragging: isDragging,\n    style: {\n      zIndex: zIndex\n    },\n    size: {\n      width: notes[noteIndex].width,\n      height: notes[noteIndex].height\n    },\n    minWidth: 250,\n    minHeight: 250,\n    position: {\n      x: notes[noteIndex].x,\n      y: notes[noteIndex].y\n    },\n    onDragStop: onDragStopHandler,\n    onResizeStop: onResizeStopHandler,\n    bounds: \"window\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"note-header\",\n    style: {\n      backgroundColor: color || \"gold\"\n    },\n    onClick: () => setZIndex(2),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"color-buttons\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn blue\",\n    onClick: changeColorHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn pink\",\n    onClick: changeColorHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn yellow\",\n    onClick: changeColorHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 21\n    }\n  })), 'ID ' + note.id + ' note index :' + noteIndex, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"cross\",\n    onClick: deleteNoteHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 17\n    }\n  }, \"\\xD7\")), changed ? /*#__PURE__*/React.createElement(\"textarea\", {\n    className: \"note-text\",\n    value: text,\n    onChange: changeTextHandler,\n    autoFocus: true,\n    onBlur: () => {// setIsDragging(false)\n      // setChanged(false)\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 25\n    }\n  }) : /*#__PURE__*/React.createElement(\"div\", {\n    id: \"preview\",\n    className: \"note-body\",\n    onClick: () => {// setIsDragging(true)\n      // setChanged(true)\n    },\n    dangerouslySetInnerHTML: createMarkup(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 25\n    }\n  }));\n};\n\nexport default Note;","map":{"version":3,"sources":["/home/deathsmell/WebstormProjects/i-note-common/src/components/Note.jsx"],"names":["React","useCallback","useEffect","useState","Rnd","useNote","TypeMessage","markdown","Note","note","color","noteIndex","notes","setNotes","connection","isDragging","setIsDragging","changed","setChanged","zIndex","setZIndex","text","setText","mdText","setMdText","toHTML","updateNote","updateStateNotes","updatedNote","filter","id","sendNewPosition","type","send","JSON","stringify","onDragStopHandler","event","data","x","y","UPDATE","onResizeStopHandler","e","direction","ref","delta","position","width","style","height","deleteNoteHandler","DELETE","prev","noteFromState","changeColorHandler","changeColor","target","className","trim","replace","b","console","log","changeTextHandler","value","saveChangeText","createMarkup","__html","backgroundColor"],"mappings":"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","sourcesContent":["import React, {useCallback, useEffect, useState} from \"react\"\nimport {Rnd} from \"react-rnd\"\nimport useNote from \"../hooks/note.hook\";\nimport {TypeMessage} from \"../hooks/TypeMessage\";\nimport {markdown} from 'markdown'\n\nconst Note = ({note, color, noteIndex, notes, setNotes, connection}) => {\n\n    const [isDragging, setIsDragging] = useState(false);\n    const [changed, setChanged] = useState(false);\n    const [zIndex, setZIndex] = useState(1);\n    const [text, setText] = useState(note.text);\n    const [mdText, setMdText] = useState(markdown.toHTML(note.text));\n    const {updateNote} = useNote();\n\n    useEffect(() => {\n        return () => {\n            setZIndex(1)\n        }\n    }, [])\n\n    const updateStateNotes = (updatedNote) => {\n        setNotes(() => [...notes.filter(note => note.id !== updatedNote.id), updatedNote])\n    }\n    const sendNewPosition = (type, note) =>\n        connection.send(JSON.stringify({...note, type}))\n\n    const onDragStopHandler = (event, data) => {\n        const updatedNote = updateNote(note, {x: data.x, y: data.y});\n        sendNewPosition(TypeMessage.UPDATE, updatedNote)\n        updateStateNotes(updatedNote)\n    }\n\n    const onResizeStopHandler = (e, direction, ref, delta, position) => {\n        const updatedNote = updateNote(note, {\n            width: ref.style.width,\n            height: ref.style.height,\n            x: position.x,\n            y: position.y,\n        });\n        updateStateNotes(updatedNote)\n        sendNewPosition(TypeMessage.UPDATE, updatedNote)\n    }\n\n    const deleteNoteHandler = () => {\n        sendNewPosition(TypeMessage.DELETE, note)\n        setNotes((prev) => [...prev.filter(noteFromState => noteFromState.id !== note.id)])\n    }\n\n    const changeColorHandler = (e) => {\n        const changeColor = e.target.className.trim().replace(/^btn\\s*/, '');\n        const b = changeColor !== color;\n        console.log(b);\n        if (b) {\n            const updatedNote = updateNote(note, {color: changeColor});\n            updateStateNotes(updatedNote)\n            sendNewPosition(TypeMessage.UPDATE, updatedNote)\n        }\n    }\n\n    const changeTextHandler = (e) => {\n        const text = e.target.value;\n        setMdText(markdown.toHTML(text))\n        setText(text)\n    }\n\n    useEffect(function saveChangeText() {\n        if (!changed) {\n            const updatedNote = updateNote(note, {text});\n            updateStateNotes(updatedNote)\n            sendNewPosition(TypeMessage.UPDATE, updatedNote)\n        }\n    }, [])\n\n    const createMarkup = useCallback(() => {\n        return {\n            __html: mdText\n        }\n    }, [mdText])\n\n\n    return (\n        <Rnd\n            className=\"note\"\n            disableDragging={isDragging}\n            style={{zIndex: zIndex}}\n            size={{width: notes[noteIndex].width, height: notes[noteIndex].height}}\n            minWidth={250}\n            minHeight={250}\n            position={{x: notes[noteIndex].x, y: notes[noteIndex].y}}\n            onDragStop={onDragStopHandler}\n            onResizeStop={onResizeStopHandler}\n            bounds={\"window\"}\n        >\n            <div className=\"note-header\"\n                 style={{backgroundColor: color || \"gold\"}}\n                 onClick={() => setZIndex(2)}\n            >\n                <div className=\"color-buttons\">\n                    <button className=\"btn blue\"\n                            onClick={changeColorHandler}\n                    />\n                    <button className=\"btn pink\"\n                            onClick={changeColorHandler}\n                    />\n                    <button className=\"btn yellow\"\n                            onClick={changeColorHandler}\n                    />\n                </div>\n                {'ID ' + note.id + ' note index :' + noteIndex}\n                <div className=\"cross\"\n                     onClick={deleteNoteHandler}\n                >\n                    &times;\n                </div>\n            </div>\n            {\n                changed\n                    ? (\n                        <textarea\n                            className=\"note-text\"\n                            value={text}\n                            onChange={changeTextHandler}\n                            autoFocus\n                            onBlur={() => {\n                                // setIsDragging(false)\n                                // setChanged(false)\n                            }}\n                        />\n\n                    )\n                    : (\n                        <div id=\"preview\"\n                             className=\"note-body\"\n                             onClick={() => {\n                                 // setIsDragging(true)\n                                 // setChanged(true)\n                             }}\n                             dangerouslySetInnerHTML={createMarkup()}\n                        />\n                    )\n            }\n        </Rnd>\n    )\n}\n\nexport default Note"]},"metadata":{},"sourceType":"module"}