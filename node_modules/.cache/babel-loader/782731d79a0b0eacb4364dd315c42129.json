{"ast":null,"code":"var _jsxFileName = \"/home/deathsmell/WebstormProjects/i-note-common/src/components/Box.jsx\";\nimport React, { useState } from 'react';\nimport { useDrag } from 'react-dnd';\nimport { ItemTypes } from './types';\nconst style = {\n  overflow: 'hidden',\n  border: '1px dashed gray',\n  backgroundColor: 'white',\n  padding: '0.5rem 1rem',\n  cursor: 'move'\n};\nexport const Box = ({\n  id,\n  left,\n  top,\n  children\n}) => {\n  const [transform, setTransform] = useState(false);\n  const [size, setSize] = useState({\n    width: '300px',\n    height: '300px'\n  });\n  const [, drag] = useDrag({\n    item: {\n      id,\n      left,\n      top,\n      type: ItemTypes.NOTE\n    },\n    collect: monitor => ({\n      isDragging: monitor.isDragging()\n    })\n  });\n\n  const handler = e => {\n    console.log(e.type);\n    setTransform(!transform);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    ref: drag,\n    style: { ...style,\n      left,\n      top,\n      ...size,\n      resize: 'both',\n      position: 'absolute'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"textarea\", {\n    className: transform ? \"note\" : \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }\n  }, \"Lorem ipsum dolor sit amet, consectetur adipisicing elit. Autem cum error impedit labore, qui quos repudiandae sit voluptatum! Animi aspernatur atque fuga inventore molestiae nam quae reprehenderit, saepe vel! Inventore!\"));\n};","map":{"version":3,"sources":["/home/deathsmell/WebstormProjects/i-note-common/src/components/Box.jsx"],"names":["React","useState","useDrag","ItemTypes","style","overflow","border","backgroundColor","padding","cursor","Box","id","left","top","children","transform","setTransform","size","setSize","width","height","drag","item","type","NOTE","collect","monitor","isDragging","handler","e","console","log","resize","position"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,SAAQC,OAAR,QAAsB,WAAtB;AACA,SAAQC,SAAR,QAAwB,SAAxB;AAEA,MAAMC,KAAK,GAAG;AACVC,EAAAA,QAAQ,EAAE,QADA;AAEVC,EAAAA,MAAM,EAAE,iBAFE;AAGVC,EAAAA,eAAe,EAAE,OAHP;AAIVC,EAAAA,OAAO,EAAE,aAJC;AAKVC,EAAAA,MAAM,EAAE;AALE,CAAd;AAOA,OAAO,MAAMC,GAAG,GAAG,CAAC;AAACC,EAAAA,EAAD;AAAKC,EAAAA,IAAL;AAAWC,EAAAA,GAAX;AAAgBC,EAAAA;AAAhB,CAAD,KAAgC;AAE/C,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4Bf,QAAQ,CAAC,KAAD,CAA1C;AACA,QAAM,CAACgB,IAAD,EAAOC,OAAP,IAAkBjB,QAAQ,CAAC;AAACkB,IAAAA,KAAK,EAAE,OAAR;AAAiBC,IAAAA,MAAM,EAAE;AAAzB,GAAD,CAAhC;AAEA,QAAM,GAAGC,IAAH,IAAWnB,OAAO,CAAC;AACrBoB,IAAAA,IAAI,EAAE;AAACX,MAAAA,EAAD;AAAKC,MAAAA,IAAL;AAAWC,MAAAA,GAAX;AAAgBU,MAAAA,IAAI,EAAEpB,SAAS,CAACqB;AAAhC,KADe;AAErBC,IAAAA,OAAO,EAAGC,OAAD,KAAc;AACnBC,MAAAA,UAAU,EAAED,OAAO,CAACC,UAAR;AADO,KAAd;AAFY,GAAD,CAAxB;;AAOA,QAAMC,OAAO,GAAIC,CAAD,IAAO;AACnBC,IAAAA,OAAO,CAACC,GAAR,CAAYF,CAAC,CAACN,IAAd;AACAP,IAAAA,YAAY,CAAC,CAACD,SAAF,CAAZ;AACH,GAHD;;AAKA,sBACI;AAAK,IAAA,GAAG,EAAEM,IAAV;AACK,IAAA,KAAK,EAAE,EAAC,GAAGjB,KAAJ;AAAWQ,MAAAA,IAAX;AAAiBC,MAAAA,GAAjB;AAAsB,SAAGI,IAAzB;AAA8Be,MAAAA,MAAM,EAAE,MAAtC;AAAkDC,MAAAA,QAAQ,EAAE;AAA5D,KADZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAII;AACU,IAAA,SAAS,EAAElB,SAAS,GAAG,MAAH,GAAY,EAD1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oOAJJ,CADJ;AAcH,CA/BM","sourcesContent":["import React, {useState} from 'react';\nimport {useDrag} from 'react-dnd';\nimport {ItemTypes} from './types';\n\nconst style = {\n    overflow: 'hidden',\n    border: '1px dashed gray',\n    backgroundColor: 'white',\n    padding: '0.5rem 1rem',\n    cursor: 'move',\n};\nexport const Box = ({id, left, top, children,}) => {\n\n    const [transform, setTransform] = useState(false);\n    const [size, setSize] = useState({width: '300px', height: '300px'});\n\n    const [, drag] = useDrag({\n        item: {id, left, top, type: ItemTypes.NOTE},\n        collect: (monitor) => ({\n            isDragging: monitor.isDragging(),\n        }),\n    });\n\n    const handler = (e) => {\n        console.log(e.type)\n        setTransform(!transform)\n    }\n\n    return (\n        <div ref={drag}\n             style={{...style, left, top, ...size,resize: 'both',     position: 'absolute',\n             }}\n        >\n            <textarea\n                      className={transform ? \"note\" : \"\"}\n            >\n            Lorem ipsum dolor sit amet, consectetur adipisicing elit. Autem cum error impedit labore, qui quos\n            repudiandae sit voluptatum! Animi aspernatur atque fuga inventore molestiae nam quae reprehenderit, saepe\n            vel! Inventore!\n            </textarea>\n        </div>\n    );\n};\n"]},"metadata":{},"sourceType":"module"}