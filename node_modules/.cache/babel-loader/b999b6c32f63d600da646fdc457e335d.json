{"ast":null,"code":"var _jsxFileName = \"/home/deathsmell/WebstormProjects/i-note-common/src/App.js\";\nimport React, { useEffect, useState } from \"react\";\nimport { Rnd } from \"react-rnd\";\nconst style = {\n  display: \"flex\",\n  alignItems: \"center\",\n  justifyContent: \"center\",\n  border: \"solid 1px #ddd\",\n  background: \"#f0f0f0\"\n};\n\nconst App = () => {\n  const [transformNote, setTransformNote] = useState(false);\n  const [text, setText] = useState('');\n  const [state, setState] = useState({\n    width: 200,\n    height: 200,\n    x: 10,\n    y: 10\n  });\n  useEffect(() => {\n    console.log(\"change\", state.x !== 0);\n\n    if (state.x === 0 || state.y === 0) {\n      setState({ ...state,\n        x: 0,\n        y: 0\n      });\n    }\n  }, [transformNote]);\n\n  const onDragStopHandler = (event, data) => {\n    console.log(event);\n    setState({\n      x: d.x,\n      y: d.y\n    });\n    if (!transformNote) localStorage.setItem('position', JSON.stringify({\n      x: d.x,\n      y: d.y\n    }));\n  };\n\n  return /*#__PURE__*/React.createElement(Rnd, {\n    className: `${transformNote ? 'note' : ''}`,\n    disableDragging: transformNote,\n    style: { ...style,\n      transition: transformNote ? \"all 1s\" : ''\n    },\n    size: {\n      width: state.width,\n      height: state.height\n    },\n    position: transformNote ? JSON.parse(localStorage.getItem('position')) || {\n      x: state.x,\n      y: state.y\n    } : {\n      x: state.x,\n      y: state.y\n    },\n    onDragStop: onDragStopHandler,\n    onResizeStop: (e, direction, ref, delta, position) => {\n      setState({\n        width: ref.style.width,\n        height: ref.style.height,\n        ...position\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }\n  }, transformNote ? /*#__PURE__*/React.createElement(\"textarea\", {\n    className: \"h-100 w-100\",\n    style: {\n      resize: 'none'\n    },\n    value: text,\n    onChange: e => setText(e.target.value),\n    onDoubleClick: () => setTransformNote(false),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 29\n    }\n  }) : /*#__PURE__*/React.createElement(\"div\", {\n    className: \"h-100 w-100\",\n    style: {\n      backgroundColor: 'white'\n    },\n    onDoubleClick: () => setTransformNote(true),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 29\n    }\n  }, text));\n};\n\nexport default App;","map":{"version":3,"sources":["/home/deathsmell/WebstormProjects/i-note-common/src/App.js"],"names":["React","useEffect","useState","Rnd","style","display","alignItems","justifyContent","border","background","App","transformNote","setTransformNote","text","setText","state","setState","width","height","x","y","console","log","onDragStopHandler","event","data","d","localStorage","setItem","JSON","stringify","transition","parse","getItem","e","direction","ref","delta","position","resize","target","value","backgroundColor"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from \"react\"\nimport {Rnd} from \"react-rnd\";\n\nconst style = {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    border: \"solid 1px #ddd\",\n    background: \"#f0f0f0\",\n};\n\nconst App = () => {\n\n    const [transformNote, setTransformNote] = useState(false);\n    const [text, setText] = useState('');\n\n    const [state, setState] = useState({\n        width: 200,\n        height: 200,\n        x: 10,\n        y: 10\n    });\n\n    useEffect(() => {\n        console.log(\"change\",state.x !== 0 )\n        if (state.x === 0 || state.y === 0 ){\n            setState(\n                {...state, x: 0, y: 0}\n            )\n        }\n    }, [transformNote])\n\n    const onDragStopHandler = (event, data) => {\n        console.log(event);\n        setState({x: d.x, y: d.y});\n        if (!transformNote) localStorage.setItem('position', JSON.stringify({x: d.x, y: d.y}))\n    }\n\n    return (\n            <Rnd\n                className={`${transformNote ? 'note' : ''}`}\n                disableDragging={transformNote}\n                style={{...style,transition: transformNote ? \"all 1s\": ''}}\n                size={{width: state.width, height: state.height}}\n                position={transformNote ? JSON.parse(localStorage.getItem('position')) || {x: state.x, y: state.y}\n                : {x: state.x, y: state.y}\n                }\n                onDragStop={onDragStopHandler}\n                onResizeStop={(e, direction, ref, delta, position) => {\n                    setState({\n                        width: ref.style.width,\n                        height: ref.style.height,\n                        ...position\n                    });\n                }}\n            >\n                {\n                    transformNote\n                        ?\n                        (\n                            <textarea\n                                className=\"h-100 w-100\"\n                                style={{resize: 'none'}}\n                                value={text}\n                                onChange={(e) => setText(e.target.value)}\n                                onDoubleClick={() => setTransformNote(false)}\n                            >\n\n                            </textarea>\n                        )\n                        : (\n                            <div className=\"h-100 w-100\"\n                                 style={{backgroundColor: 'white'}}\n                                 onDoubleClick={() => setTransformNote(true)}\n                            >\n                                {text}\n                            </div>\n                        )\n                }\n            </Rnd>\n    )\n}\n\nexport default App"]},"metadata":{},"sourceType":"module"}