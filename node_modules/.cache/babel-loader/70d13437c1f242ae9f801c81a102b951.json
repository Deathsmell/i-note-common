{"ast":null,"code":"var _jsxFileName = \"/home/deathsmell/WebstormProjects/i-note-common/src/components/Box.jsx\";\nimport React from 'react';\nimport { useDrag } from 'react-dnd';\nimport { ItemTypes } from './types';\nconst style = {\n  position: 'absolute',\n  border: '1px dashed gray',\n  backgroundColor: 'white',\n  padding: '0.5rem 1rem',\n  cursor: 'move'\n};\nexport const Box = ({\n  id,\n  left,\n  top,\n  hideSourceOnDrag,\n  children\n}) => {\n  const [{\n    isDragging\n  }, drag] = useDrag({\n    item: {\n      id,\n      left,\n      top,\n      type: ItemTypes.BOX\n    },\n    collect: monitor => ({\n      isDragging: monitor.isDragging()\n    })\n  });\n\n  if (isDragging && hideSourceOnDrag) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      ref: drag,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 16\n      }\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    ref: drag,\n    style: { ...style,\n      left,\n      top\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }\n  }, children);\n};","map":{"version":3,"sources":["/home/deathsmell/WebstormProjects/i-note-common/src/components/Box.jsx"],"names":["React","useDrag","ItemTypes","style","position","border","backgroundColor","padding","cursor","Box","id","left","top","hideSourceOnDrag","children","isDragging","drag","item","type","BOX","collect","monitor"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,WAAxB;AACA,SAASC,SAAT,QAA0B,SAA1B;AACA,MAAMC,KAAK,GAAG;AACVC,EAAAA,QAAQ,EAAE,UADA;AAEVC,EAAAA,MAAM,EAAE,iBAFE;AAGVC,EAAAA,eAAe,EAAE,OAHP;AAIVC,EAAAA,OAAO,EAAE,aAJC;AAKVC,EAAAA,MAAM,EAAE;AALE,CAAd;AAOA,OAAO,MAAMC,GAAG,GAAG,CAAC;AAAEC,EAAAA,EAAF;AAAMC,EAAAA,IAAN;AAAYC,EAAAA,GAAZ;AAAiBC,EAAAA,gBAAjB;AAAmCC,EAAAA;AAAnC,CAAD,KAAoD;AACnE,QAAM,CAAC;AAAEC,IAAAA;AAAF,GAAD,EAAiBC,IAAjB,IAAyBf,OAAO,CAAC;AACnCgB,IAAAA,IAAI,EAAE;AAAEP,MAAAA,EAAF;AAAMC,MAAAA,IAAN;AAAYC,MAAAA,GAAZ;AAAiBM,MAAAA,IAAI,EAAEhB,SAAS,CAACiB;AAAjC,KAD6B;AAEnCC,IAAAA,OAAO,EAAGC,OAAD,KAAc;AACnBN,MAAAA,UAAU,EAAEM,OAAO,CAACN,UAAR;AADO,KAAd;AAF0B,GAAD,CAAtC;;AAMA,MAAIA,UAAU,IAAIF,gBAAlB,EAAoC;AAChC,wBAAO;AAAK,MAAA,GAAG,EAAEG,IAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACH;;AACD,sBAAQ;AAAK,IAAA,GAAG,EAAEA,IAAV;AAAgB,IAAA,KAAK,EAAE,EAAE,GAAGb,KAAL;AAAYQ,MAAAA,IAAZ;AAAkBC,MAAAA;AAAlB,KAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACHE,QADG,CAAR;AAGH,CAbM","sourcesContent":["import React from 'react';\nimport { useDrag } from 'react-dnd';\nimport { ItemTypes } from './types';\nconst style = {\n    position: 'absolute',\n    border: '1px dashed gray',\n    backgroundColor: 'white',\n    padding: '0.5rem 1rem',\n    cursor: 'move',\n};\nexport const Box = ({ id, left, top, hideSourceOnDrag, children, }) => {\n    const [{ isDragging }, drag] = useDrag({\n        item: { id, left, top, type: ItemTypes.BOX },\n        collect: (monitor) => ({\n            isDragging: monitor.isDragging(),\n        }),\n    });\n    if (isDragging && hideSourceOnDrag) {\n        return <div ref={drag}/>;\n    }\n    return (<div ref={drag} style={{ ...style, left, top }}>\n        {children}\n    </div>);\n};\n"]},"metadata":{},"sourceType":"module"}