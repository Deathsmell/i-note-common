{"ast":null,"code":"import _toConsumableArray from\"/home/deathsmell/WebstormProjects/i-note-common/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _slicedToArray from\"/home/deathsmell/WebstormProjects/i-note-common/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{useCallback,useEffect,useState}from\"react\";import{TypeMessage}from\"./TypeMessage\";var useWS=function useWS(notes,setNotes){var _useState=useState(null),_useState2=_slicedToArray(_useState,2),connection=_useState2[0],setConnection=_useState2[1];var update=useCallback(function(serverNote){setNotes(function(prev){return[].concat(_toConsumableArray(prev.filter(function(note){return note.id!==serverNote.id;})),[serverNote]);});},[setNotes]);var reducer=useCallback(function(note,action){switch(action){case TypeMessage.CREATE:return update(note);case TypeMessage.UPDATE:return update(note);case TypeMessage.DELETE:return setNotes(function(prev){return _toConsumableArray(prev.filter(function(noteFromState){return noteFromState.id!==note.id;}));});default:if(Array.isArray(note)){setNotes(function(){return note;});}else{console.error('Incorrect data message',action,note);}}},[setNotes,update]);var updatePosition=useCallback(function(_ref){var data=_ref.data;if(data){var respNote=JSON.parse(data);reducer(respNote,respNote.type);}},[reducer]);var connected=function connected(){console.log(\"connected\");};useEffect(function(){if(connection===null){var url=window.location.href.replace(/^http/,'ws').replace(/3000\\/$/,'5000/');console.log(url);var webSocket=new WebSocket(url);webSocket.onmessage=updatePosition;webSocket.onopen=connected;setConnection(webSocket);}},[connection,updatePosition]);return{connection:connection};};export default useWS;","map":{"version":3,"sources":["/home/deathsmell/WebstormProjects/i-note-common/src/hooks/ws.hook.js"],"names":["useCallback","useEffect","useState","TypeMessage","useWS","notes","setNotes","connection","setConnection","update","serverNote","prev","filter","note","id","reducer","action","CREATE","UPDATE","DELETE","noteFromState","Array","isArray","console","error","updatePosition","data","respNote","JSON","parse","type","connected","log","url","window","location","href","replace","webSocket","WebSocket","onmessage","onopen"],"mappings":"4QAAA,OAAQA,WAAR,CAAqBC,SAArB,CAAgCC,QAAhC,KAA+C,OAA/C,CACA,OAAQC,WAAR,KAA0B,eAA1B,CAGA,GAAMC,CAAAA,KAAK,CAAG,QAARA,CAAAA,KAAQ,CAACC,KAAD,CAAQC,QAAR,CAAqB,eAEKJ,QAAQ,CAAC,IAAD,CAFb,wCAExBK,UAFwB,eAEZC,aAFY,eAI/B,GAAMC,CAAAA,MAAM,CAAGT,WAAW,CAAC,SAACU,UAAD,CAAgB,CACvCJ,QAAQ,CAAC,SAACK,IAAD,qCAAcA,IAAI,CAACC,MAAL,CAAY,SAAAC,IAAI,QAAIA,CAAAA,IAAI,CAACC,EAAL,GAAYJ,UAAU,CAACI,EAA3B,EAAhB,CAAd,GAA8DJ,UAA9D,IAAD,CAAR,CACH,CAFyB,CAEvB,CAAEJ,QAAF,CAFuB,CAA1B,CAIA,GAAMS,CAAAA,OAAO,CAAGf,WAAW,CAAC,SAACa,IAAD,CAAOG,MAAP,CAAkB,CAC1C,OAAQA,MAAR,EACI,IAAKb,CAAAA,WAAW,CAACc,MAAjB,CACI,MAAOR,CAAAA,MAAM,CAACI,IAAD,CAAb,CACJ,IAAKV,CAAAA,WAAW,CAACe,MAAjB,CACI,MAAOT,CAAAA,MAAM,CAACI,IAAD,CAAb,CACJ,IAAKV,CAAAA,WAAW,CAACgB,MAAjB,CACI,MAAOb,CAAAA,QAAQ,CAAC,SAACK,IAAD,4BAAcA,IAAI,CAACC,MAAL,CAAY,SAAAQ,aAAa,QAAIA,CAAAA,aAAa,CAACN,EAAd,GAAqBD,IAAI,CAACC,EAA9B,EAAzB,CAAd,GAAD,CAAf,CACJ,QACI,GAAIO,KAAK,CAACC,OAAN,CAAcT,IAAd,CAAJ,CAAyB,CACrBP,QAAQ,CAAC,iBAAMO,CAAAA,IAAN,EAAD,CAAR,CACH,CAFD,IAEO,CACHU,OAAO,CAACC,KAAR,CAAc,wBAAd,CAAwCR,MAAxC,CAAgDH,IAAhD,EACH,CAZT,CAcH,CAf0B,CAexB,CAACP,QAAD,CAAWG,MAAX,CAfwB,CAA3B,CAiBA,GAAMgB,CAAAA,cAAc,CAAGzB,WAAW,CAAC,cAAY,IAAV0B,CAAAA,IAAU,MAAVA,IAAU,CAC3C,GAAIA,IAAJ,CAAU,CACN,GAAMC,CAAAA,QAAQ,CAAGC,IAAI,CAACC,KAAL,CAAWH,IAAX,CAAjB,CACAX,OAAO,CAACY,QAAD,CAAWA,QAAQ,CAACG,IAApB,CAAP,CACH,CACJ,CALiC,CAK/B,CAACf,OAAD,CAL+B,CAAlC,CAOA,GAAMgB,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,EAAM,CACpBR,OAAO,CAACS,GAAR,CAAY,WAAZ,EACH,CAFD,CAIA/B,SAAS,CAAC,UAAM,CACZ,GAAIM,UAAU,GAAK,IAAnB,CAAyB,CACrB,GAAM0B,CAAAA,GAAG,CAAGC,MAAM,CAACC,QAAP,CAAgBC,IAAhB,CACPC,OADO,CACC,OADD,CACU,IADV,EAEPA,OAFO,CAEC,SAFD,CAEY,OAFZ,CAAZ,CAGAd,OAAO,CAACS,GAAR,CAAYC,GAAZ,EACA,GAAMK,CAAAA,SAAS,CAAG,GAAIC,CAAAA,SAAJ,CAAcN,GAAd,CAAlB,CACAK,SAAS,CAACE,SAAV,CAAsBf,cAAtB,CACAa,SAAS,CAACG,MAAV,CAAmBV,SAAnB,CACAvB,aAAa,CAAC8B,SAAD,CAAb,CACH,CACJ,CAXQ,CAWN,CAAC/B,UAAD,CAAakB,cAAb,CAXM,CAAT,CAaA,MAAO,CAAClB,UAAU,CAAVA,UAAD,CAAP,CACH,CAlDD,CAoDA,cAAeH,CAAAA,KAAf","sourcesContent":["import {useCallback, useEffect, useState} from \"react\";\nimport {TypeMessage} from \"./TypeMessage\";\n\n\nconst useWS = (notes, setNotes) => {\n\n    const [connection, setConnection] = useState(null);\n\n    const update = useCallback((serverNote) => {\n        setNotes((prev) => [...prev.filter(note => note.id !== serverNote.id), serverNote])\n    }, [ setNotes])\n\n    const reducer = useCallback((note, action) => {\n        switch (action) {\n            case TypeMessage.CREATE:\n                return update(note)\n            case TypeMessage.UPDATE:\n                return update(note)\n            case TypeMessage.DELETE:\n                return setNotes((prev) => [...prev.filter(noteFromState => noteFromState.id !== note.id)])\n            default:\n                if (Array.isArray(note)) {\n                    setNotes(() => note)\n                } else {\n                    console.error('Incorrect data message', action, note)\n                }\n        }\n    }, [setNotes, update])\n\n    const updatePosition = useCallback(({data}) => {\n        if (data) {\n            const respNote = JSON.parse(data);\n            reducer(respNote, respNote.type)\n        }\n    }, [reducer])\n\n    const connected = () => {\n        console.log(\"connected\")\n    }\n\n    useEffect(() => {\n        if (connection === null) {\n            const url = window.location.href\n                .replace(/^http/, 'ws')\n                .replace(/3000\\/$/, '5000/');\n            console.log(url)\n            const webSocket = new WebSocket(url)\n            webSocket.onmessage = updatePosition\n            webSocket.onopen = connected\n            setConnection(webSocket)\n        }\n    }, [connection, updatePosition])\n\n    return {connection}\n}\n\nexport default useWS"]},"metadata":{},"sourceType":"module"}