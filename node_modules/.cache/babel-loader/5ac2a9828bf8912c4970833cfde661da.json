{"ast":null,"code":"var _jsxFileName = \"/home/deathsmell/WebstormProjects/i-note-common/src/App.js\";\nimport React from \"react\";\nimport _ from \"lodash\";\nimport { WidthProvider, Responsive } from 'react-grid-layout';\nconst ResponsiveReactGridLayout = WidthProvider(Responsive);\nexport default class ShowcaseLayout extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      currentBreakpoint: \"lg\",\n      compactType: \"vertical\",\n      mounted: false,\n      layouts: {\n        lg: generateLayout()\n      }\n    };\n\n    this.onBreakpointChange = breakpoint => {\n      this.setState({\n        currentBreakpoint: breakpoint\n      });\n    };\n\n    this.onCompactTypeChange = () => {\n      const {\n        compactType: oldCompactType\n      } = this.state;\n      const compactType = oldCompactType === \"horizontal\" ? \"vertical\" : oldCompactType === \"vertical\" ? null : \"horizontal\";\n      this.setState({\n        compactType\n      });\n    };\n\n    this.onLayoutChange = (layout, layouts) => {\n      this.props.onLayoutChange(layout, layouts);\n    };\n\n    this.onNewLayout = () => {\n      this.setState({\n        layouts: {\n          lg: generateLayout()\n        }\n      });\n    };\n\n    this.onDrop = elemParams => {\n      alert(`Element parameters: ${JSON.stringify(elemParams)}`);\n    };\n  }\n\n  componentDidMount() {\n    this.setState({\n      mounted: true\n    });\n  }\n\n  generateDOM() {\n    return _.map(this.state.layouts.lg, function (l, i) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        key: i,\n        className: l.static ? \"static\" : \"\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 17\n        }\n      }, l.static ? /*#__PURE__*/React.createElement(\"span\", {\n        className: \"text\",\n        title: \"This item is static and cannot be removed or resized.\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 25\n        }\n      }, \"Static - \", i) : /*#__PURE__*/React.createElement(\"span\", {\n        className: \"text\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 25\n        }\n      }, i));\n    });\n  }\n\n  render() {\n    // eslint-disable-next-line no-unused-vars\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }\n    }, \"Current Breakpoint: \", this.state.currentBreakpoint, \" (\", this.props.cols[this.state.currentBreakpoint], \" columns)\"), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 17\n      }\n    }, \"Compaction type:\", \" \", _.capitalize(this.state.compactType) || \"No Compaction\"), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.onNewLayout,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 17\n      }\n    }, \"Generate New Layout\"), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.onCompactTypeChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 17\n      }\n    }, \"Change Compaction Type\"), /*#__PURE__*/React.createElement(ResponsiveReactGridLayout, Object.assign({}, this.props, {\n      layouts: this.state.layouts,\n      onBreakpointChange: this.onBreakpointChange,\n      onLayoutChange: this.onLayoutChange,\n      onDrop: this.onDrop // WidthProvider option\n      ,\n      measureBeforeMount: false // I like to have it animate on mount. If you don't, delete `useCSSTransforms` (it's default `true`)\n      // and set `measureBeforeMount={true}`.\n      ,\n      useCSSTransforms: this.state.mounted,\n      compactType: this.state.compactType,\n      preventCollision: !this.state.compactType,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 17\n      }\n    }), this.generateDOM()));\n  }\n\n}\nShowcaseLayout.defaultProps = {\n  className: \"layout\",\n  rowHeight: 30,\n  onLayoutChange: function () {},\n  cols: {\n    lg: 12,\n    md: 10,\n    sm: 6,\n    xs: 4,\n    xxs: 2\n  }\n};\n\nfunction generateLayout() {\n  return _.map(_.range(0, 25), function (item, i) {\n    var y = Math.ceil(Math.random() * 4) + 1;\n    return {\n      x: Math.round(Math.random() * 5) * 2,\n      y: Math.floor(i / 6) * y,\n      w: 2,\n      h: y,\n      i: i.toString(),\n      static: Math.random() < 0.05\n    };\n  });\n}","map":{"version":3,"sources":["/home/deathsmell/WebstormProjects/i-note-common/src/App.js"],"names":["React","_","WidthProvider","Responsive","ResponsiveReactGridLayout","ShowcaseLayout","Component","state","currentBreakpoint","compactType","mounted","layouts","lg","generateLayout","onBreakpointChange","breakpoint","setState","onCompactTypeChange","oldCompactType","onLayoutChange","layout","props","onNewLayout","onDrop","elemParams","alert","JSON","stringify","componentDidMount","generateDOM","map","l","i","static","render","cols","capitalize","defaultProps","className","rowHeight","md","sm","xs","xxs","range","item","y","Math","ceil","random","x","round","floor","w","h","toString"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport _ from \"lodash\";\nimport {WidthProvider,Responsive} from 'react-grid-layout';\nconst ResponsiveReactGridLayout = WidthProvider(Responsive);\n\n\nexport default class ShowcaseLayout extends React.Component{\n    static defaultProps = {\n        className: \"layout\",\n        rowHeight: 30,\n        onLayoutChange: function() {},\n        cols: { lg: 12, md: 10, sm: 6, xs: 4, xxs: 2 },\n    };\n\n    state = {\n        currentBreakpoint: \"lg\",\n        compactType: \"vertical\",\n        mounted: false,\n        layouts: { lg: generateLayout() }\n    };\n\n    componentDidMount() {\n        this.setState({ mounted: true });\n    }\n\n    generateDOM() {\n        return _.map(this.state.layouts.lg, function(l, i) {\n            return (\n                <div key={i} className={l.static ? \"static\" : \"\"}>\n                    {l.static ? (\n                        <span\n                            className=\"text\"\n                            title=\"This item is static and cannot be removed or resized.\"\n                        >\n              Static - {i}\n            </span>\n                    ) : (\n                        <span className=\"text\">{i}</span>\n                    )}\n                </div>\n            );\n        });\n    }\n\n    onBreakpointChange = (breakpoint) => {\n        this.setState({\n            currentBreakpoint: breakpoint\n        });\n    };\n\n    onCompactTypeChange = () => {\n        const { compactType: oldCompactType } = this.state;\n        const compactType =\n            oldCompactType === \"horizontal\"\n                ? \"vertical\"\n                : oldCompactType === \"vertical\"\n                ? null\n                : \"horizontal\";\n        this.setState({ compactType });\n    };\n\n    onLayoutChange = (layout, layouts) => {\n        this.props.onLayoutChange(layout, layouts);\n    };\n\n    onNewLayout = () => {\n        this.setState({\n            layouts: { lg: generateLayout() }\n        });\n    };\n\n    onDrop = (elemParams) => {\n        alert(`Element parameters: ${JSON.stringify(elemParams)}`);\n    };\n\n    render() {\n        // eslint-disable-next-line no-unused-vars\n        return (\n            <div>\n                <div>\n                    Current Breakpoint: {this.state.currentBreakpoint} (\n                    {this.props.cols[this.state.currentBreakpoint]} columns)\n                </div>\n                <div>\n                    Compaction type:{\" \"}\n                    {_.capitalize(this.state.compactType) || \"No Compaction\"}\n                </div>\n                <button onClick={this.onNewLayout}>Generate New Layout</button>\n                <button onClick={this.onCompactTypeChange}>\n                    Change Compaction Type\n                </button>\n                <ResponsiveReactGridLayout\n                    {...this.props}\n                    layouts={this.state.layouts}\n                    onBreakpointChange={this.onBreakpointChange}\n                    onLayoutChange={this.onLayoutChange}\n                    onDrop={this.onDrop}\n                    // WidthProvider option\n                    measureBeforeMount={false}\n                    // I like to have it animate on mount. If you don't, delete `useCSSTransforms` (it's default `true`)\n                    // and set `measureBeforeMount={true}`.\n                    useCSSTransforms={this.state.mounted}\n                    compactType={this.state.compactType}\n                    preventCollision={!this.state.compactType}\n                >\n                    {this.generateDOM()}\n                </ResponsiveReactGridLayout>\n            </div>\n        );\n    }\n}\n\nfunction generateLayout() {\n    return _.map(_.range(0, 25), function(item, i) {\n        var y = Math.ceil(Math.random() * 4) + 1;\n        return {\n            x: Math.round(Math.random() * 5) * 2,\n            y: Math.floor(i / 6) * y,\n            w: 2,\n            h: y,\n            i: i.toString(),\n            static: Math.random() < 0.05\n        };\n    });\n}\n"]},"metadata":{},"sourceType":"module"}