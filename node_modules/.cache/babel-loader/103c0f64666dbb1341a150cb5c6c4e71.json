{"ast":null,"code":"var _jsxFileName = \"/home/deathsmell/WebstormProjects/i-note-common/src/components/Note.js\";\nimport React, { useEffect, useRef, useState } from \"react\";\nimport { Rnd } from \"react-rnd\";\nconst style = {\n  display: \"flex\",\n  alignItems: \"center\",\n  justifyContent: \"center\",\n  border: \"solid 1px #ddd\",\n  background: \"#f0f0f0\"\n};\n\nconst Note = ({\n  key,\n  index,\n  state,\n  setState\n}) => {\n  useEffect(() => {\n    console.log(index || 99);\n    console.log(key || 99);\n  }, []);\n  const [transformNote, setTransformNote] = useState(false);\n  const [text, setText] = useState('');\n  const rnd = useRef();\n\n  const savePositionWhenTransformation = () => {\n    console.log(state[index], 'index');\n    console.log(state, 'state');\n    console.log(\"change\", state[index].x);\n\n    if (state[index].x !== 0 || state[index].y !== 0) {\n      localStorage.setItem('position', JSON.stringify({\n        x: state[index].x,\n        y: state[index].y\n      }));\n      console.log(\"position\");\n      setState([...state, { ...state[index],\n        x: 0,\n        y: 0\n      }]);\n    } else if (state[index].x === 0 && state[index].y === 0) {\n      const stringPosition = localStorage.getItem('position');\n\n      if (stringPosition) {\n        const {\n          x,\n          y\n        } = JSON.parse(stringPosition);\n        console.log(\"update \");\n        setState([...state, { ...state[index],\n          x,\n          y\n        }]);\n      }\n    }\n  };\n\n  const getPositionIfRefreshPage = () => {\n    if (state.x === 0 && state.y === 0) {\n      const stringPosition = localStorage.getItem('position');\n\n      if (stringPosition) {\n        const {\n          x,\n          y\n        } = JSON.parse(stringPosition); // rnd.updatePosition({x,y})\n\n        setState([...state, { ...state[index],\n          x,\n          y\n        }]);\n      }\n    }\n  };\n\n  useEffect(getPositionIfRefreshPage, []);\n  useEffect(savePositionWhenTransformation, [transformNote]);\n\n  const onDragStopHandler = (event, data) => {\n    setState([...state, { ...state[index],\n      x: data.x,\n      y: data.y\n    }]);\n  };\n\n  const onResizeStopHandler = (e, direction, ref, delta, position) => {\n    console.log(\"direction\", direction);\n    console.log(\"ref\", ref);\n    console.log('delta', delta);\n    console.log(\"position\", position);\n    setState([...state, { ...state[index],\n      width: ref.style.width,\n      height: ref.style.height,\n      ...position\n    }]);\n  };\n\n  return /*#__PURE__*/React.createElement(Rnd, {\n    ref: rnd,\n    className: `note${transformNote ? '-activate' : ''}`,\n    disableDragging: transformNote,\n    style: { ...style\n    },\n    size: {\n      width: state[index].width,\n      height: state[index].height\n    },\n    minWidth: 250,\n    minHeight: 250,\n    position: {\n      x: state[index].x,\n      y: state[index].y\n    },\n    onDragStop: onDragStopHandler,\n    onResizeStop: onResizeStopHandler,\n    bounds: \"window\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"note-header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"color-buttons\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn btn-success\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn btn-danger\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn btn-secondary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"cross\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 17\n    }\n  }, \"\\xD7\")), transformNote ? /*#__PURE__*/React.createElement(\"textarea\", {\n    className: \"note-text\",\n    style: {\n      resize: 'none',\n      backgroundColor: \"grey\",\n      width: '100%',\n      height: \"100%\"\n    },\n    value: text,\n    onChange: e => setText(e.target.value),\n    onDoubleClick: () => setTransformNote(false),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 25\n    }\n  }) : /*#__PURE__*/React.createElement(\"div\", {\n    className: \"note-body\",\n    style: {\n      backgroundColor: 'grey'\n    },\n    onDoubleClick: () => setTransformNote(true),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 25\n    }\n  }, text));\n};\n\nexport default Note;","map":{"version":3,"sources":["/home/deathsmell/WebstormProjects/i-note-common/src/components/Note.js"],"names":["React","useEffect","useRef","useState","Rnd","style","display","alignItems","justifyContent","border","background","Note","key","index","state","setState","console","log","transformNote","setTransformNote","text","setText","rnd","savePositionWhenTransformation","x","y","localStorage","setItem","JSON","stringify","stringPosition","getItem","parse","getPositionIfRefreshPage","onDragStopHandler","event","data","onResizeStopHandler","e","direction","ref","delta","position","width","height","resize","backgroundColor","target","value"],"mappings":"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","sourcesContent":["import React, {useEffect, useRef, useState} from \"react\"\nimport {Rnd} from \"react-rnd\"\n\nconst style = {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    border: \"solid 1px #ddd\",\n    background: \"#f0f0f0\",\n};\n\nconst Note = ({key, index, state, setState}) => {\n\n\n    useEffect(() => {\n        console.log(index || 99)\n        console.log(key || 99)\n    }, [])\n\n    const [transformNote, setTransformNote] = useState(false);\n    const [text, setText] = useState('');\n    const rnd = useRef();\n\n\n    const savePositionWhenTransformation = () => {\n        console.log(state[index], 'index')\n        console.log(state, 'state')\n        console.log(\"change\", state[index].x)\n        if (state[index].x !== 0 || state[index].y !== 0) {\n            localStorage.setItem('position', JSON.stringify({x: state[index].x, y: state[index].y}))\n            console.log(\"position\")\n            setState(\n                [...state, {...state[index], x: 0, y: 0}]\n            )\n        } else if (state[index].x === 0 && state[index].y === 0) {\n            const stringPosition = localStorage.getItem('position');\n            if (stringPosition) {\n                const {x, y} = JSON.parse(stringPosition);\n                console.log(\"update \")\n                setState([...state, {\n                    ...state[index],\n                    x, y\n                }])\n            }\n        }\n    };\n\n    const getPositionIfRefreshPage = () => {\n        if (state.x === 0 && state.y === 0) {\n            const stringPosition = localStorage.getItem('position');\n            if (stringPosition) {\n                const {x, y} = JSON.parse(stringPosition);\n                // rnd.updatePosition({x,y})\n                setState([...state, {\n                    ...state[index],\n                    x, y\n                }])\n            }\n        }\n    }\n\n    useEffect(getPositionIfRefreshPage, [])\n    useEffect(savePositionWhenTransformation, [transformNote])\n\n\n    const onDragStopHandler = (event, data) => {\n        setState([...state, {...state[index], x: data.x, y: data.y}])\n    }\n\n    const onResizeStopHandler = (e, direction, ref, delta, position) => {\n        console.log(\"direction\", direction);\n        console.log(\"ref\", ref);\n        console.log('delta', delta)\n        console.log(\"position\", position);\n        setState([...state, {\n            ...state[index],\n            width: ref.style.width,\n            height: ref.style.height,\n            ...position\n        }]);\n    }\n\n    return (\n        <Rnd\n            ref={rnd}\n            className={`note${transformNote ? '-activate' : ''}`}\n            disableDragging={transformNote}\n            style={{...style}}\n            size={{width: state[index].width, height: state[index].height}}\n            minWidth={250}\n            minHeight={250}\n            position={{x: state[index].x, y: state[index].y}}\n            onDragStop={onDragStopHandler}\n            onResizeStop={onResizeStopHandler}\n            bounds={\"window\"}\n        >\n            <div className=\"note-header\">\n                <div className=\"color-buttons\">\n                    <button className=\"btn btn-success\"/>\n                    <button className=\"btn btn-danger\"/>\n                    <button className=\"btn btn-secondary\"/>\n                </div>\n                <div className=\"cross\">\n                    &times;\n                </div>\n            </div>\n            {\n                transformNote\n                    ?\n                    (\n                        <textarea\n                            className=\"note-text\"\n                            style={{resize: 'none', backgroundColor: \"grey\", width: '100%', height: \"100%\"}}\n                            value={text}\n                            onChange={(e) => setText(e.target.value)}\n                            onDoubleClick={() => setTransformNote(false)}\n                        >\n\n                            </textarea>\n                    )\n                    : (\n                        <div className=\"note-body\"\n                             style={{backgroundColor: 'grey'}}\n                             onDoubleClick={() => setTransformNote(true)}\n                        >\n                            {text}\n                        </div>\n                    )\n            }\n        </Rnd>\n    )\n}\n\nexport default Note"]},"metadata":{},"sourceType":"module"}