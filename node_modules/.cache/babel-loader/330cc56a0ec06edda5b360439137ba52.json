{"ast":null,"code":"import { useCallback, useEffect, useState } from \"react\";\nimport useLocal from \"./local.hook\";\nimport { TypeMessage } from \"./TypeMessage\";\n\nconst useWS = (notes, setNotes) => {\n  const [connection, setConnection] = useState(null);\n  const {\n    saveInLocal,\n    getFromLocal,\n    removeInLocal\n  } = useLocal();\n  const [currentNotes, setCurrentNotes] = useState(notes);\n\n  function setArrayNotes(serverNote) {\n    serverNote.forEach(note => {\n      saveInLocal(note.id, JSON.stringify(note));\n    });\n    setNotes(serverNote);\n  }\n\n  const compare = (localNote, serverNote) => localNote.x === serverNote.x && localNote.y === serverNote.y && localNote.width === serverNote.width && localNote.height === serverNote.height;\n\n  const update = (serverNote, data) => {\n    console.log('Update: old notes', notes, \"add\", serverNote);\n    saveInLocal(serverNote.id, data);\n    const index = notes.findIndex(note => note.id === serverNote.id);\n    const fromLocal = getFromLocal(serverNote.id);\n    const parse = JSON.parse(fromLocal); // if (!compare(parse, serverNote)) {\n\n    console.log(notes.length, serverNote);\n\n    if (notes.length !== 0) {\n      console.log('update');\n      notes[index] = serverNote;\n      setNotes([...notes]);\n    } else {\n      console.log('create');\n      setNotes(prev => prev.push(serverNote));\n    } // }\n\n  };\n\n  const updatePosition = ({\n    data\n  }) => {\n    if (data) {\n      const respNote = JSON.parse(data);\n\n      if (!respNote.type && Array.isArray(respNote)) {\n        console.log(\"initial\");\n        setArrayNotes(respNote);\n        return;\n      }\n\n      if (respNote.type === TypeMessage.UPDATE) {\n        console.log(TypeMessage.UPDATE);\n        update(respNote, data);\n      } else if (respNote.type === TypeMessage.CREATE) {\n        console.log(TypeMessage.CREATE);\n        update(respNote, data);\n      } else if (respNote.type === TypeMessage.DELETE) {\n        removeInLocal(respNote.id);\n        setNotes(notes.filter(note => note.id !== respNote.id));\n      } else {\n        console.error('Incorrect data message', data);\n      }\n    }\n  }; // const getPositions = ({data}) => {\n  //     console.log(\"get positions\", data)\n  //     if (data) {\n  //         const serverNotes = JSON.parse(data);\n  //         setNotes(serverNotes)\n  //         serverNotes.forEach(note => {\n  //             saveInLocal(note.id, note)\n  //         })\n  //     }\n  // }\n\n\n  const test = data => {\n    console.log(data);\n  };\n\n  useEffect(() => {\n    if (connection === null) {\n      const url = window.location.href.replace(/^http/, 'ws').replace(/3000\\/$/, '5000/');\n      console.log(url);\n      const webSocket = new WebSocket(url);\n      webSocket.onmessage = updatePosition;\n      webSocket.onopen = test;\n      setConnection(webSocket);\n    }\n  }, [connection]);\n  return {\n    connection\n  };\n};\n\nexport default useWS;","map":{"version":3,"sources":["/home/deathsmell/WebstormProjects/i-note-common/src/hooks/ws.hook.js"],"names":["useCallback","useEffect","useState","useLocal","TypeMessage","useWS","notes","setNotes","connection","setConnection","saveInLocal","getFromLocal","removeInLocal","currentNotes","setCurrentNotes","setArrayNotes","serverNote","forEach","note","id","JSON","stringify","compare","localNote","x","y","width","height","update","data","console","log","index","findIndex","fromLocal","parse","length","prev","push","updatePosition","respNote","type","Array","isArray","UPDATE","CREATE","DELETE","filter","error","test","url","window","location","href","replace","webSocket","WebSocket","onmessage","onopen"],"mappings":"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","sourcesContent":["import {useCallback, useEffect, useState} from \"react\";\nimport useLocal from \"./local.hook\";\nimport {TypeMessage} from \"./TypeMessage\";\n\n\nconst useWS = (notes,setNotes) => {\n\n    const [connection, setConnection] = useState(null);\n    const {saveInLocal, getFromLocal, removeInLocal} = useLocal();\n    const [currentNotes,setCurrentNotes] = useState(notes);\n\n    function setArrayNotes(serverNote) {\n        serverNote.forEach(note => {\n            saveInLocal(note.id, JSON.stringify(note))\n        })\n        setNotes(serverNote)\n    }\n\n    const compare = (localNote, serverNote) => localNote.x === serverNote.x\n        && localNote.y === serverNote.y\n        && localNote.width === serverNote.width\n        && localNote.height === serverNote.height\n\n\n    const update = (serverNote, data) => {\n        console.log('Update: old notes', notes, \"add\", serverNote)\n        saveInLocal(serverNote.id, data)\n        const index = notes.findIndex(note => note.id === serverNote.id);\n        const fromLocal = getFromLocal(serverNote.id);\n        const parse = JSON.parse(fromLocal);\n        // if (!compare(parse, serverNote)) {\n        console.log(notes.length, serverNote)\n        if (notes.length !== 0) {\n            console.log('update')\n            notes[index] = serverNote\n            setNotes([...notes])\n        } else {\n            console.log('create')\n            setNotes((prev) => prev.push(serverNote))\n        }\n        // }\n    }\n\n    const updatePosition = ({data}) => {\n        if (data) {\n            const respNote = JSON.parse(data);\n            if (!respNote.type && Array.isArray(respNote)) {\n                console.log(\"initial\")\n                setArrayNotes(respNote);\n                return;\n            }\n            if (respNote.type === TypeMessage.UPDATE) {\n                console.log(TypeMessage.UPDATE)\n                update(respNote, data);\n            } else if (respNote.type === TypeMessage.CREATE) {\n                console.log(TypeMessage.CREATE)\n                update(respNote, data);\n            } else if (respNote.type === TypeMessage.DELETE) {\n                removeInLocal(respNote.id)\n                setNotes(notes.filter(note => note.id !== respNote.id))\n            } else {\n                console.error('Incorrect data message', data)\n            }\n        }\n    }\n\n    // const getPositions = ({data}) => {\n    //     console.log(\"get positions\", data)\n    //     if (data) {\n    //         const serverNotes = JSON.parse(data);\n    //         setNotes(serverNotes)\n    //         serverNotes.forEach(note => {\n    //             saveInLocal(note.id, note)\n    //         })\n    //     }\n    // }\n\n    const test = (data) => {\n        console.log(data)\n    }\n\n    useEffect(() => {\n        if (connection === null) {\n            const url = window.location.href\n                .replace(/^http/, 'ws')\n                .replace(/3000\\/$/, '5000/');\n            console.log(url)\n            const webSocket = new WebSocket(url)\n            webSocket.onmessage = updatePosition\n            webSocket.onopen = test\n            setConnection(webSocket)\n        }\n    }, [connection])\n\n    return {connection}\n}\n\nexport default useWS"]},"metadata":{},"sourceType":"module"}