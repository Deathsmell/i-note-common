{"ast":null,"code":"var _jsxFileName = \"/home/deathsmell/WebstormProjects/i-note-common/src/App.js\";\nimport React from \"react\";\nimport _ from \"lodash\";\nimport { Responsive, WidthProvider } from 'react-grid-layout';\nconst ResponsiveReactGridLayout = WidthProvider(Responsive);\n\nconst ShowcaseLayout = () => {\n  const defaultProps = {\n    className: \"layout\",\n    rowHeight: 30,\n    onLayoutChange: function () {},\n    cols: {\n      lg: 12,\n      md: 10,\n      sm: 6,\n      xs: 4,\n      xxs: 2\n    }\n  };\n  const state = {\n    currentBreakpoint: \"lg\",\n    compactType: \"vertical\",\n    mounted: false,\n    layouts: {\n      lg: generateLayout()\n    }\n  };\n\n  const componentDidMount = () => {\n    setState({\n      mounted: true\n    });\n  };\n\n  const generateDOM = () => {\n    return _.map(state.layouts.lg, function (l, i) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        key: i,\n        className: l.static ? \"static\" : \"\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 17\n        }\n      }, l.static ? /*#__PURE__*/React.createElement(\"span\", {\n        className: \"text\",\n        title: \"This item is static and cannot be removed or resized.\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 25\n        }\n      }, \"Static - \", i) : /*#__PURE__*/React.createElement(\"span\", {\n        className: \"text\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 25\n        }\n      }, i));\n    });\n  };\n\n  const onBreakpointChange = breakpoint => {\n    setState({\n      currentBreakpoint: breakpoint\n    });\n  };\n\n  const onCompactTypeChange = () => {\n    const {\n      compactType: oldCompactType\n    } = state;\n    const compactType = oldCompactType === \"horizontal\" ? \"vertical\" : oldCompactType === \"vertical\" ? null : \"horizontal\";\n    setState({\n      compactType\n    });\n  };\n\n  const onLayoutChange = (layout, layouts) => {\n    props.onLayoutChange(layout, layouts);\n  };\n\n  const onNewLayout = () => {\n    setState({\n      layouts: {\n        lg: generateLayout()\n      }\n    });\n  };\n\n  const onDrop = elemParams => {\n    alert(`Element parameters: ${JSON.stringify(elemParams)}`);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(ResponsiveReactGridLayout, Object.assign({}, props, {\n    layouts: state.layouts,\n    onBreakpointChange: onBreakpointChange,\n    onLayoutChange: onLayoutChange,\n    onDrop: onDrop // WidthProvider option\n    ,\n    measureBeforeMount: false // I like to have it animate on mount. If you don't, delete `useCSSTransforms` (it's default `true`)\n    // and set `measureBeforeMount={true}`.\n    ,\n    useCSSTransforms: state.mounted,\n    compactType: state.compactType,\n    preventCollision: !state.compactType,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }\n  }), generateDOM()));\n};\n\nfunction generateLayout() {\n  return _.map(_.range(0, 25), function (item, i) {\n    var y = Math.ceil(Math.random() * 4) + 1;\n    return {\n      x: Math.round(Math.random() * 5) * 2,\n      y: Math.floor(i / 6) * y,\n      w: 2,\n      h: y,\n      i: i.toString(),\n      static: Math.random() < 0.05\n    };\n  });\n}\n\nexport default ShowcaseLayout;","map":{"version":3,"sources":["/home/deathsmell/WebstormProjects/i-note-common/src/App.js"],"names":["React","_","Responsive","WidthProvider","ResponsiveReactGridLayout","ShowcaseLayout","defaultProps","className","rowHeight","onLayoutChange","cols","lg","md","sm","xs","xxs","state","currentBreakpoint","compactType","mounted","layouts","generateLayout","componentDidMount","setState","generateDOM","map","l","i","static","onBreakpointChange","breakpoint","onCompactTypeChange","oldCompactType","layout","props","onNewLayout","onDrop","elemParams","alert","JSON","stringify","range","item","y","Math","ceil","random","x","round","floor","w","h","toString"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport _ from \"lodash\";\nimport {Responsive, WidthProvider} from 'react-grid-layout';\n\nconst ResponsiveReactGridLayout = WidthProvider(Responsive);\n\n\nconst ShowcaseLayout = () => {\n    const defaultProps = {\n        className: \"layout\",\n        rowHeight: 30,\n        onLayoutChange: function () {\n        },\n        cols: {lg: 12, md: 10, sm: 6, xs: 4, xxs: 2},\n    };\n\n    const state = {\n        currentBreakpoint: \"lg\",\n        compactType: \"vertical\",\n        mounted: false,\n        layouts: {lg: generateLayout()}\n    };\n\n    const componentDidMount = () => {\n        setState({mounted: true});\n    }\n\n    const generateDOM = () => {\n        return _.map(state.layouts.lg, function (l, i) {\n            return (\n                <div key={i} className={l.static ? \"static\" : \"\"}>\n                    {l.static ? (\n                        <span\n                            className=\"text\"\n                            title=\"This item is static and cannot be removed or resized.\"\n                        >\n              Static - {i}\n            </span>\n                    ) : (\n                        <span className=\"text\">{i}</span>\n                    )}\n                </div>\n            );\n        });\n    }\n\n    const onBreakpointChange = (breakpoint) => {\n        setState({\n            currentBreakpoint: breakpoint\n        });\n    };\n\n    const onCompactTypeChange = () => {\n        const {compactType: oldCompactType} = state;\n        const compactType =\n            oldCompactType === \"horizontal\"\n                ? \"vertical\"\n                : oldCompactType === \"vertical\"\n                ? null\n                : \"horizontal\";\n        setState({compactType});\n    };\n\n    const onLayoutChange = (layout, layouts) => {\n        props.onLayoutChange(layout, layouts);\n    };\n\n    const onNewLayout = () => {\n        setState({\n            layouts: {lg: generateLayout()}\n        });\n    };\n\n    const onDrop = (elemParams) => {\n        alert(`Element parameters: ${JSON.stringify(elemParams)}`);\n    };\n\n    return (\n        <div>\n            <ResponsiveReactGridLayout\n                {...props}\n                layouts={state.layouts}\n                onBreakpointChange={onBreakpointChange}\n                onLayoutChange={onLayoutChange}\n                onDrop={onDrop}\n                // WidthProvider option\n                measureBeforeMount={false}\n                // I like to have it animate on mount. If you don't, delete `useCSSTransforms` (it's default `true`)\n                // and set `measureBeforeMount={true}`.\n                useCSSTransforms={state.mounted}\n                compactType={state.compactType}\n                preventCollision={!state.compactType}\n            >\n                {generateDOM()}\n            </ResponsiveReactGridLayout>\n        </div>\n    )\n}\n\n\nfunction generateLayout() {\n    return _.map(_.range(0, 25), function (item, i) {\n        var y = Math.ceil(Math.random() * 4) + 1;\n        return {\n            x: Math.round(Math.random() * 5) * 2,\n            y: Math.floor(i / 6) * y,\n            w: 2,\n            h: y,\n            i: i.toString(),\n            static: Math.random() < 0.05\n        };\n    });\n}\n\nexport default ShowcaseLayout"]},"metadata":{},"sourceType":"module"}