{"ast":null,"code":"var _jsxFileName = \"/home/deathsmell/WebstormProjects/i-note-common/src/App.js\";\nimport React, { useCallback, useEffect, useState } from \"react\";\nimport Note from \"./components/Note\";\n\nconst App = () => {\n  const [state, setState] = useState([{\n    width: 200,\n    height: 200,\n    x: 0,\n    y: 0\n  }, {\n    width: 200,\n    height: 200,\n    x: 0,\n    y: 0\n  }]);\n\n  const localKey = index => `position-note-${index}`;\n\n  const saveInLocal = (index, note) => localStorage.setItem(localKey(index), JSON.stringify(note));\n\n  const getFromLocal = index => localStorage.getItem(localKey(index)); // const removeInLocal = (index) =>\n  //     localStorage.removeItem(localKey(index))\n\n\n  useEffect(() => {\n    setState(state.map((note, index) => {\n      const fromLocal = getFromLocal(index);\n      if (fromLocal) return { ...JSON.parse(fromLocal)\n      };else return note;\n    }));\n  }, []);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      backgroundColor: \"aqua\",\n      width: \"100vw\",\n      height: '100vh'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }\n  }, state.map((note, index) => {\n    return /*#__PURE__*/React.createElement(Note, {\n      key: index,\n      index: index,\n      state: state,\n      setState: setState,\n      saveInLocal: saveInLocal,\n      getFromLocal: getFromLocal,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 29\n      }\n    });\n  }));\n};\n\nexport default App;","map":{"version":3,"sources":["/home/deathsmell/WebstormProjects/i-note-common/src/App.js"],"names":["React","useCallback","useEffect","useState","Note","App","state","setState","width","height","x","y","localKey","index","saveInLocal","note","localStorage","setItem","JSON","stringify","getFromLocal","getItem","map","fromLocal","parse","backgroundColor"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,WAAf,EAA4BC,SAA5B,EAAuCC,QAAvC,QAAsD,OAAtD;AACA,OAAOC,IAAP,MAAiB,mBAAjB;;AAEA,MAAMC,GAAG,GAAG,MAAM;AAEd,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBJ,QAAQ,CAAC,CAC/B;AACIK,IAAAA,KAAK,EAAE,GADX;AAEIC,IAAAA,MAAM,EAAE,GAFZ;AAGIC,IAAAA,CAAC,EAAE,CAHP;AAIIC,IAAAA,CAAC,EAAE;AAJP,GAD+B,EAO/B;AACIH,IAAAA,KAAK,EAAE,GADX;AAEIC,IAAAA,MAAM,EAAE,GAFZ;AAGIC,IAAAA,CAAC,EAAE,CAHP;AAIIC,IAAAA,CAAC,EAAE;AAJP,GAP+B,CAAD,CAAlC;;AAeA,QAAMC,QAAQ,GAAIC,KAAD,IAAY,iBAAgBA,KAAM,EAAnD;;AACA,QAAMC,WAAW,GAAG,CAACD,KAAD,EAAQE,IAAR,KAChBC,YAAY,CAACC,OAAb,CAAqBL,QAAQ,CAACC,KAAD,CAA7B,EAAsCK,IAAI,CAACC,SAAL,CAAeJ,IAAf,CAAtC,CADJ;;AAGA,QAAMK,YAAY,GAAIP,KAAD,IAAWG,YAAY,CAACK,OAAb,CAAqBT,QAAQ,CAACC,KAAD,CAA7B,CAAhC,CArBc,CAuBd;AACA;;;AAGAX,EAAAA,SAAS,CAAC,MAAM;AACZK,IAAAA,QAAQ,CAACD,KAAK,CAACgB,GAAN,CAAU,CAACP,IAAD,EAAOF,KAAP,KAAiB;AAChC,YAAMU,SAAS,GAAGH,YAAY,CAACP,KAAD,CAA9B;AACA,UAAIU,SAAJ,EACI,OAAO,EAAC,GAAGL,IAAI,CAACM,KAAL,CAAWD,SAAX;AAAJ,OAAP,CADJ,KAGI,OAAOR,IAAP;AACP,KANQ,CAAD,CAAR;AAOH,GARQ,EAQN,EARM,CAAT;AAUA,sBACI;AAAK,IAAA,KAAK,EAAE;AAACU,MAAAA,eAAe,EAAE,MAAlB;AAA0BjB,MAAAA,KAAK,EAAE,OAAjC;AAA0CC,MAAAA,MAAM,EAAE;AAAlD,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEQH,KAAK,CAACgB,GAAN,CAAU,CAACP,IAAD,EAAOF,KAAP,KAAiB;AACnB,wBACI,oBAAC,IAAD;AAAM,MAAA,GAAG,EAAEA,KAAX;AACM,MAAA,KAAK,EAAEA,KADb;AAEM,MAAA,KAAK,EAAEP,KAFb;AAGM,MAAA,QAAQ,EAAEC,QAHhB;AAIM,MAAA,WAAW,EAAEO,WAJnB;AAKM,MAAA,YAAY,EAAEM,YALpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ;AASH,GAVL,CAFR,CADJ;AAkBH,CAvDD;;AA0DA,eAAef,GAAf","sourcesContent":["import React, {useCallback, useEffect, useState} from \"react\"\nimport Note from \"./components/Note\";\n\nconst App = () => {\n\n    const [state, setState] = useState([\n        {\n            width: 200,\n            height: 200,\n            x: 0,\n            y: 0\n        },\n        {\n            width: 200,\n            height: 200,\n            x: 0,\n            y: 0\n        }\n    ]);\n\n    const localKey = (index) => `position-note-${index}`;\n    const saveInLocal = (index, note) =>\n        localStorage.setItem(localKey(index), JSON.stringify(note))\n\n    const getFromLocal = (index) => localStorage.getItem(localKey(index))\n\n    // const removeInLocal = (index) =>\n    //     localStorage.removeItem(localKey(index))\n\n\n    useEffect(() => {\n        setState(state.map((note, index) => {\n            const fromLocal = getFromLocal(index);\n            if (fromLocal)\n                return {...JSON.parse(fromLocal)}\n            else\n                return note\n        }))\n    }, [])\n\n    return (\n        <div style={{backgroundColor: \"aqua\", width: \"100vw\", height: '100vh'}}>\n            {\n                state.map((note, index) => {\n                        return (\n                            <Note key={index}\n                                  index={index}\n                                  state={state}\n                                  setState={setState}\n                                  saveInLocal={saveInLocal}\n                                  getFromLocal={getFromLocal}\n                            />\n                        )\n                    }\n                )\n            }\n        </div>\n    )\n}\n\n\nexport default App"]},"metadata":{},"sourceType":"module"}