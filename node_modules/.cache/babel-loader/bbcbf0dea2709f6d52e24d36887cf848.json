{"ast":null,"code":"var _jsxFileName = \"/home/deathsmell/WebstormProjects/i-note-common/src/App.js\";\nimport React, { useState } from \"react\";\nimport Note from \"./components/Note\";\nimport useWS from \"./hooks/ws.hook\";\nimport useNote from \"./hooks/note.hook\";\nimport { TypeMessage } from \"./hooks/TypeMessage\";\n\nconst App = () => {\n  const {\n    defaultNote,\n    updateNote\n  } = useNote();\n  const notesState = useState([]);\n  const [notes, setNotes] = notesState;\n  const {\n    connection\n  } = useWS(notesState); // useEffect(() => {\n  //     console.log(notes.length);\n  // }, [notes])\n\n  const createHandler = e => {\n    const newNote = updateNote(defaultNote, {\n      x: e.clientX,\n      y: e.clientY,\n      type: TypeMessage.CREATE\n    });\n    connection.send(JSON.stringify(newNote));\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      backgroundColor: \"aqua\",\n      width: \"100vw\",\n      height: '100vh',\n      cursor: 'pointer'\n    },\n    onDoubleClick: createHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }\n  }, notes.length !== 0 && notes.map((note, index) => {\n    return /*#__PURE__*/React.createElement(Note, {\n      key: index,\n      noteIndex: index,\n      note: note,\n      noteId: note.id,\n      notes: notes,\n      setNotes: setNotes,\n      serverText: note.text,\n      connection: connection,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 25\n      }\n    });\n  }));\n};\n\nexport default App;","map":{"version":3,"sources":["/home/deathsmell/WebstormProjects/i-note-common/src/App.js"],"names":["React","useState","Note","useWS","useNote","TypeMessage","App","defaultNote","updateNote","notesState","notes","setNotes","connection","createHandler","e","newNote","x","clientX","y","clientY","type","CREATE","send","JSON","stringify","backgroundColor","width","height","cursor","length","map","note","index","id","text"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAOC,IAAP,MAAiB,mBAAjB;AACA,OAAOC,KAAP,MAAkB,iBAAlB;AACA,OAAOC,OAAP,MAAoB,mBAApB;AACA,SAAQC,WAAR,QAA0B,qBAA1B;;AAGA,MAAMC,GAAG,GAAG,MAAM;AAEd,QAAM;AAACC,IAAAA,WAAD;AAAcC,IAAAA;AAAd,MAA4BJ,OAAO,EAAzC;AACA,QAAMK,UAAU,GAAGR,QAAQ,CAAC,EAAD,CAA3B;AACA,QAAM,CAACS,KAAD,EAAQC,QAAR,IAAoBF,UAA1B;AACA,QAAM;AAACG,IAAAA;AAAD,MAAeT,KAAK,CAACM,UAAD,CAA1B,CALc,CAOd;AACA;AACA;;AAEA,QAAMI,aAAa,GAAIC,CAAD,IAAO;AACzB,UAAMC,OAAO,GAAGP,UAAU,CAACD,WAAD,EAAc;AAACS,MAAAA,CAAC,EAAEF,CAAC,CAACG,OAAN;AAAeC,MAAAA,CAAC,EAAEJ,CAAC,CAACK,OAApB;AAA6BC,MAAAA,IAAI,EAAEf,WAAW,CAACgB;AAA/C,KAAd,CAA1B;AACAT,IAAAA,UAAU,CAACU,IAAX,CAAgBC,IAAI,CAACC,SAAL,CAAeT,OAAf,CAAhB;AACH,GAHD;;AAKA,sBACI;AAAK,IAAA,KAAK,EAAE;AAACU,MAAAA,eAAe,EAAE,MAAlB;AAA0BC,MAAAA,KAAK,EAAE,OAAjC;AAA0CC,MAAAA,MAAM,EAAE,OAAlD;AAA2DC,MAAAA,MAAM,EAAC;AAAlE,KAAZ;AACK,IAAA,aAAa,EAAEf,aADpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAGKH,KAAK,CAACmB,MAAN,KAAiB,CAAjB,IACDnB,KAAK,CAACoB,GAAN,CAAU,CAACC,IAAD,EAAOC,KAAP,KAAiB;AACnB,wBACI,oBAAC,IAAD;AAAM,MAAA,GAAG,EAAEA,KAAX;AACM,MAAA,SAAS,EAAEA,KADjB;AAEM,MAAA,IAAI,EAAED,IAFZ;AAGM,MAAA,MAAM,EAAEA,IAAI,CAACE,EAHnB;AAIM,MAAA,KAAK,EAAEvB,KAJb;AAKM,MAAA,QAAQ,EAAEC,QALhB;AAMM,MAAA,UAAU,EAAEoB,IAAI,CAACG,IANvB;AAOM,MAAA,UAAU,EAAEtB,UAPlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ;AAWH,GAZL,CAJJ,CADJ;AAsBH,CAtCD;;AAyCA,eAAeN,GAAf","sourcesContent":["import React, {useState} from \"react\"\nimport Note from \"./components/Note\";\nimport useWS from \"./hooks/ws.hook\";\nimport useNote from \"./hooks/note.hook\";\nimport {TypeMessage} from \"./hooks/TypeMessage\";\n\n\nconst App = () => {\n\n    const {defaultNote, updateNote} = useNote();\n    const notesState = useState([]);\n    const [notes, setNotes] = notesState;\n    const {connection} = useWS(notesState);\n\n    // useEffect(() => {\n    //     console.log(notes.length);\n    // }, [notes])\n\n    const createHandler = (e) => {\n        const newNote = updateNote(defaultNote, {x: e.clientX, y: e.clientY, type: TypeMessage.CREATE});\n        connection.send(JSON.stringify(newNote))\n    }\n\n    return (\n        <div style={{backgroundColor: \"aqua\", width: \"100vw\", height: '100vh', cursor:'pointer'}}\n             onDoubleClick={createHandler}\n        >\n            {notes.length !== 0 &&\n            notes.map((note, index) => {\n                    return (\n                        <Note key={index}\n                              noteIndex={index}\n                              note={note}\n                              noteId={note.id}\n                              notes={notes}\n                              setNotes={setNotes}\n                              serverText={note.text}\n                              connection={connection}\n                        />\n                    )\n                }\n            )\n            }\n        </div>\n    )\n}\n\n\nexport default App"]},"metadata":{},"sourceType":"module"}