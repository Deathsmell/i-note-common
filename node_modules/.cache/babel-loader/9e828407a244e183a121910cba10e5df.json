{"ast":null,"code":"var _jsxFileName = \"/home/deathsmell/WebstormProjects/i-note-common/src/components/Note.js\";\nimport React, { useEffect, useRef, useState } from \"react\";\nimport { Rnd } from \"react-rnd\";\nimport useNote from \"../hooks/note.hook\";\nimport useLocal from \"../hooks/local.hook\";\nimport { TypeMessage } from \"../hooks/TypeMessage\";\nconst style = {\n  display: \"flex\",\n  alignItems: \"center\",\n  justifyContent: \"center\",\n  border: \"solid 1px #ddd\",\n  background: \"#f0f0f0\"\n};\n\nconst Note = ({\n  note,\n  noteIndex,\n  noteId,\n  serverText,\n  notes,\n  setNotes,\n  connection\n}) => {\n  const rnd = useRef();\n  const [transformNote, setTransformNote] = useState(false);\n  const [text, setText] = useState(serverText);\n  const {\n    removeInLocal,\n    saveInLocal,\n    getFromLocal\n  } = useLocal();\n  const {\n    updateNote\n  } = useNote();\n\n  const getNote = () => notes.find(note => note.id === noteId);\n\n  const getNoteIndex = () => notes.findIndex(note => note.id === noteId);\n\n  const updateStateNotes = (index, updatedNote) => {\n    console.log(\"update state: old value\", notes[index], \"new value\", updatedNote, notes);\n    notes[index] = updatedNote;\n    setNotes(() => [...notes]);\n  };\n\n  const sendNewPosition = (type, note) => connection.send(JSON.stringify({ ...note,\n    type\n  }));\n\n  useEffect(function watchNotes() {\n    console.log('Update notes', notes);\n  }, [notes]);\n\n  const onDragStopHandler = (event, data) => {\n    const updatedNote = updateNote(note, {\n      x: data.x,\n      y: data.y\n    });\n    saveInLocal(noteId, updatedNote);\n    updateStateNotes(noteIndex, updatedNote);\n    sendNewPosition(TypeMessage.UPDATE, updatedNote);\n  };\n\n  const onResizeStopHandler = (e, direction, ref, delta, position) => {\n    const note = getNote();\n    const updatedNote = updateNote(note, {\n      width: ref.style.width,\n      height: ref.style.height,\n      x: position.x,\n      y: position.y\n    });\n    saveInLocal(noteId, updatedNote);\n    updateStateNotes(noteId, updatedNote);\n    sendNewPosition(TypeMessage.UPDATE, updatedNote);\n  };\n\n  const deleteNoteHandler = () => {\n    // todo: create delete function on cross icon\n    console.log(\"Nothing to do\");\n  };\n\n  return /*#__PURE__*/React.createElement(Rnd, {\n    ref: rnd,\n    className: `note${transformNote ? '-activate' : ''}`,\n    disableDragging: transformNote,\n    style: { ...style\n    },\n    size: {\n      width: notes[noteIndex].width,\n      height: notes[noteIndex].height\n    },\n    minWidth: 250,\n    minHeight: 250,\n    position: {\n      x: notes[noteIndex].x,\n      y: notes[noteIndex].y\n    },\n    onDragStop: onDragStopHandler,\n    onResizeStop: onResizeStopHandler,\n    bounds: \"window\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"note-header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"color-buttons\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn btn-success\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn btn-danger\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn btn-secondary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"cross\",\n    onClick: deleteNoteHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 17\n    }\n  }, \"\\xD7\")), /*#__PURE__*/React.createElement(\"textarea\", {\n    className: \"note-text\",\n    style: {\n      backgroundColor: notes[noteIndex].color || \"grey\"\n    },\n    value: text,\n    onChange: e => setText(e.target.value),\n    onDoubleClick: () => setTransformNote(false),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 17\n    }\n  }));\n};\n\nexport default Note;","map":{"version":3,"sources":["/home/deathsmell/WebstormProjects/i-note-common/src/components/Note.js"],"names":["React","useEffect","useRef","useState","Rnd","useNote","useLocal","TypeMessage","style","display","alignItems","justifyContent","border","background","Note","note","noteIndex","noteId","serverText","notes","setNotes","connection","rnd","transformNote","setTransformNote","text","setText","removeInLocal","saveInLocal","getFromLocal","updateNote","getNote","find","id","getNoteIndex","findIndex","updateStateNotes","index","updatedNote","console","log","sendNewPosition","type","send","JSON","stringify","watchNotes","onDragStopHandler","event","data","x","y","UPDATE","onResizeStopHandler","e","direction","ref","delta","position","width","height","deleteNoteHandler","backgroundColor","color","target","value"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,MAA1B,EAAkCC,QAAlC,QAAiD,OAAjD;AACA,SAAQC,GAAR,QAAkB,WAAlB;AACA,OAAOC,OAAP,MAAoB,oBAApB;AACA,OAAOC,QAAP,MAAqB,qBAArB;AACA,SAAQC,WAAR,QAA0B,sBAA1B;AAEA,MAAMC,KAAK,GAAG;AACVC,EAAAA,OAAO,EAAE,MADC;AAEVC,EAAAA,UAAU,EAAE,QAFF;AAGVC,EAAAA,cAAc,EAAE,QAHN;AAIVC,EAAAA,MAAM,EAAE,gBAJE;AAKVC,EAAAA,UAAU,EAAE;AALF,CAAd;;AAQA,MAAMC,IAAI,GAAG,CAAC;AAACC,EAAAA,IAAD;AAAOC,EAAAA,SAAP;AAAkBC,EAAAA,MAAlB;AAA0BC,EAAAA,UAA1B;AAAsCC,EAAAA,KAAtC;AAA6CC,EAAAA,QAA7C;AAAuDC,EAAAA;AAAvD,CAAD,KAAwE;AAGjF,QAAMC,GAAG,GAAGpB,MAAM,EAAlB;AACA,QAAM,CAACqB,aAAD,EAAgBC,gBAAhB,IAAoCrB,QAAQ,CAAC,KAAD,CAAlD;AACA,QAAM,CAACsB,IAAD,EAAOC,OAAP,IAAkBvB,QAAQ,CAACe,UAAD,CAAhC;AACA,QAAM;AAACS,IAAAA,aAAD;AAAgBC,IAAAA,WAAhB;AAA6BC,IAAAA;AAA7B,MAA6CvB,QAAQ,EAA3D;AACA,QAAM;AAACwB,IAAAA;AAAD,MAAezB,OAAO,EAA5B;;AAEA,QAAM0B,OAAO,GAAG,MAAMZ,KAAK,CAACa,IAAN,CAAWjB,IAAI,IAAIA,IAAI,CAACkB,EAAL,KAAYhB,MAA/B,CAAtB;;AACA,QAAMiB,YAAY,GAAG,MAAMf,KAAK,CAACgB,SAAN,CAAgBpB,IAAI,IAAIA,IAAI,CAACkB,EAAL,KAAYhB,MAApC,CAA3B;;AACA,QAAMmB,gBAAgB,GAAG,CAACC,KAAD,EAAQC,WAAR,KAAwB;AAC7CC,IAAAA,OAAO,CAACC,GAAR,CAAY,yBAAZ,EAAuCrB,KAAK,CAACkB,KAAD,CAA5C,EAAqD,WAArD,EAAkEC,WAAlE,EAA+EnB,KAA/E;AACAA,IAAAA,KAAK,CAACkB,KAAD,CAAL,GAAeC,WAAf;AACAlB,IAAAA,QAAQ,CAAC,MAAM,CAAC,GAAGD,KAAJ,CAAP,CAAR;AACH,GAJD;;AAKA,QAAMsB,eAAe,GAAG,CAACC,IAAD,EAAO3B,IAAP,KAAgBM,UAAU,CAACsB,IAAX,CAAgBC,IAAI,CAACC,SAAL,CAAe,EAAC,GAAG9B,IAAJ;AAAU2B,IAAAA;AAAV,GAAf,CAAhB,CAAxC;;AAGAzC,EAAAA,SAAS,CAAC,SAAS6C,UAAT,GAAsB;AAC5BP,IAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA4BrB,KAA5B;AACH,GAFQ,EAEN,CAACA,KAAD,CAFM,CAAT;;AAKA,QAAM4B,iBAAiB,GAAG,CAACC,KAAD,EAAQC,IAAR,KAAiB;AACvC,UAAMX,WAAW,GAAGR,UAAU,CAACf,IAAD,EAAO;AAACmC,MAAAA,CAAC,EAAED,IAAI,CAACC,CAAT;AAAYC,MAAAA,CAAC,EAAEF,IAAI,CAACE;AAApB,KAAP,CAA9B;AACAvB,IAAAA,WAAW,CAACX,MAAD,EAASqB,WAAT,CAAX;AACAF,IAAAA,gBAAgB,CAACpB,SAAD,EAAYsB,WAAZ,CAAhB;AACAG,IAAAA,eAAe,CAAClC,WAAW,CAAC6C,MAAb,EAAqBd,WAArB,CAAf;AACH,GALD;;AAOA,QAAMe,mBAAmB,GAAG,CAACC,CAAD,EAAIC,SAAJ,EAAeC,GAAf,EAAoBC,KAApB,EAA2BC,QAA3B,KAAwC;AAChE,UAAM3C,IAAI,GAAGgB,OAAO,EAApB;AACA,UAAMO,WAAW,GAAGR,UAAU,CAACf,IAAD,EAAO;AACjC4C,MAAAA,KAAK,EAAEH,GAAG,CAAChD,KAAJ,CAAUmD,KADgB;AAEjCC,MAAAA,MAAM,EAAEJ,GAAG,CAAChD,KAAJ,CAAUoD,MAFe;AAGjCV,MAAAA,CAAC,EAAEQ,QAAQ,CAACR,CAHqB;AAIjCC,MAAAA,CAAC,EAAEO,QAAQ,CAACP;AAJqB,KAAP,CAA9B;AAMAvB,IAAAA,WAAW,CAACX,MAAD,EAASqB,WAAT,CAAX;AACAF,IAAAA,gBAAgB,CAACnB,MAAD,EAASqB,WAAT,CAAhB;AACAG,IAAAA,eAAe,CAAClC,WAAW,CAAC6C,MAAb,EAAqBd,WAArB,CAAf;AACH,GAXD;;AAaA,QAAMuB,iBAAiB,GAAG,MAAM;AAC5B;AACAtB,IAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ;AACH,GAHD;;AAKA,sBACI,oBAAC,GAAD;AACI,IAAA,GAAG,EAAElB,GADT;AAEI,IAAA,SAAS,EAAG,OAAMC,aAAa,GAAG,WAAH,GAAiB,EAAG,EAFvD;AAGI,IAAA,eAAe,EAAEA,aAHrB;AAII,IAAA,KAAK,EAAE,EAAC,GAAGf;AAAJ,KAJX;AAKI,IAAA,IAAI,EAAE;AAACmD,MAAAA,KAAK,EAAExC,KAAK,CAACH,SAAD,CAAL,CAAiB2C,KAAzB;AAAgCC,MAAAA,MAAM,EAAEzC,KAAK,CAACH,SAAD,CAAL,CAAiB4C;AAAzD,KALV;AAMI,IAAA,QAAQ,EAAE,GANd;AAOI,IAAA,SAAS,EAAE,GAPf;AAQI,IAAA,QAAQ,EAAE;AAACV,MAAAA,CAAC,EAAE/B,KAAK,CAACH,SAAD,CAAL,CAAiBkC,CAArB;AAAwBC,MAAAA,CAAC,EAAEhC,KAAK,CAACH,SAAD,CAAL,CAAiBmC;AAA5C,KARd;AASI,IAAA,UAAU,EAAEJ,iBAThB;AAUI,IAAA,YAAY,EAAEM,mBAVlB;AAWI,IAAA,MAAM,EAAE,QAXZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAaI;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAQ,IAAA,SAAS,EAAC,iBAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eAEI;AAAQ,IAAA,SAAS,EAAC,gBAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,eAGI;AAAQ,IAAA,SAAS,EAAC,mBAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHJ,CADJ,eAMI;AAAK,IAAA,SAAS,EAAC,OAAf;AACK,IAAA,OAAO,EAAEQ,iBADd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YANJ,CAbJ,eA0BQ;AACI,IAAA,SAAS,EAAC,WADd;AAEI,IAAA,KAAK,EAAE;AAACC,MAAAA,eAAe,EAAE3C,KAAK,CAACH,SAAD,CAAL,CAAiB+C,KAAjB,IAA0B;AAA5C,KAFX;AAGI,IAAA,KAAK,EAAEtC,IAHX;AAII,IAAA,QAAQ,EAAG6B,CAAD,IAAO5B,OAAO,CAAC4B,CAAC,CAACU,MAAF,CAASC,KAAV,CAJ5B;AAKI,IAAA,aAAa,EAAE,MAAMzC,gBAAgB,CAAC,KAAD,CALzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IA1BR,CADJ;AAuCH,CAxFD;;AA0FA,eAAeV,IAAf","sourcesContent":["import React, {useEffect, useRef, useState} from \"react\"\nimport {Rnd} from \"react-rnd\"\nimport useNote from \"../hooks/note.hook\";\nimport useLocal from \"../hooks/local.hook\";\nimport {TypeMessage} from \"../hooks/TypeMessage\";\n\nconst style = {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    border: \"solid 1px #ddd\",\n    background: \"#f0f0f0\",\n};\n\nconst Note = ({note, noteIndex, noteId, serverText, notes, setNotes, connection}) => {\n\n\n    const rnd = useRef();\n    const [transformNote, setTransformNote] = useState(false);\n    const [text, setText] = useState(serverText);\n    const {removeInLocal, saveInLocal, getFromLocal} = useLocal();\n    const {updateNote} = useNote();\n\n    const getNote = () => notes.find(note => note.id === noteId)\n    const getNoteIndex = () => notes.findIndex(note => note.id === noteId)\n    const updateStateNotes = (index, updatedNote) => {\n        console.log(\"update state: old value\", notes[index], \"new value\", updatedNote, notes)\n        notes[index] = updatedNote\n        setNotes(() => [...notes])\n    }\n    const sendNewPosition = (type, note) => connection.send(JSON.stringify({...note, type}))\n\n\n    useEffect(function watchNotes() {\n        console.log('Update notes', notes)\n    }, [notes])\n\n\n    const onDragStopHandler = (event, data) => {\n        const updatedNote = updateNote(note, {x: data.x, y: data.y});\n        saveInLocal(noteId, updatedNote)\n        updateStateNotes(noteIndex, updatedNote)\n        sendNewPosition(TypeMessage.UPDATE, updatedNote)\n    }\n\n    const onResizeStopHandler = (e, direction, ref, delta, position) => {\n        const note = getNote();\n        const updatedNote = updateNote(note, {\n            width: ref.style.width,\n            height: ref.style.height,\n            x: position.x,\n            y: position.y\n        });\n        saveInLocal(noteId, updatedNote)\n        updateStateNotes(noteId, updatedNote)\n        sendNewPosition(TypeMessage.UPDATE, updatedNote)\n    }\n\n    const deleteNoteHandler = () => {\n        // todo: create delete function on cross icon\n        console.log(\"Nothing to do\")\n    }\n\n    return (\n        <Rnd\n            ref={rnd}\n            className={`note${transformNote ? '-activate' : ''}`}\n            disableDragging={transformNote}\n            style={{...style}}\n            size={{width: notes[noteIndex].width, height: notes[noteIndex].height}}\n            minWidth={250}\n            minHeight={250}\n            position={{x: notes[noteIndex].x, y: notes[noteIndex].y}}\n            onDragStop={onDragStopHandler}\n            onResizeStop={onResizeStopHandler}\n            bounds={\"window\"}\n        >\n            <div className=\"note-header\">\n                <div className=\"color-buttons\">\n                    <button className=\"btn btn-success\"/>\n                    <button className=\"btn btn-danger\"/>\n                    <button className=\"btn btn-secondary\"/>\n                </div>\n                <div className=\"cross\"\n                     onClick={deleteNoteHandler}\n                >\n                    &times;\n                </div>\n            </div>\n            {\n                <textarea\n                    className=\"note-text\"\n                    style={{backgroundColor: notes[noteIndex].color || \"grey\"}}\n                    value={text}\n                    onChange={(e) => setText(e.target.value)}\n                    onDoubleClick={() => setTransformNote(false)}\n                >\n\n                            </textarea>\n            }\n        </Rnd>\n    )\n}\n\nexport default Note"]},"metadata":{},"sourceType":"module"}