{"ast":null,"code":"var _jsxFileName = \"/home/deathsmell/WebstormProjects/i-note-common/src/App.js\";\nimport React, { useEffect, useRef, useState } from \"react\";\nimport { Rnd } from \"react-rnd\";\nimport update from 'immutability-helper';\nconst style = {\n  display: \"flex\",\n  alignItems: \"center\",\n  justifyContent: \"center\",\n  border: \"solid 1px #ddd\",\n  background: \"#f0f0f0\"\n};\n\nconst App = () => {\n  const [transformNote, setTransformNote] = useState(false);\n  const [text, setText] = useState('');\n  const rnd = useRef();\n  const [state, setState] = useState({\n    width: 200,\n    height: 200,\n    x: 0,\n    y: 0\n  });\n\n  const savePositionWhenTransformation = () => {\n    console.log(\"change\", state.x !== 0);\n\n    if (state.x !== 0 || state.y !== 0) {\n      localStorage.setItem('position', JSON.stringify({\n        x: state.x,\n        y: state.y\n      }));\n      rnd.updatePosition({\n        x: 0,\n        y: 0\n      }); // setState(\n      //     {...state, x: 0, y: 0}\n      // )\n    } else if (state.x === 0 && state.y === 0) {\n      const stringPosition = localStorage.getItem('position');\n\n      if (stringPosition) {\n        const {\n          x,\n          y\n        } = JSON.parse(stringPosition); // rnd.updatePosition({x,y})\n\n        setState({ ...state,\n          x,\n          y\n        });\n      }\n    }\n  };\n\n  const getPositionIfRefreshPage = () => {\n    if (state.x === 0 && state.y === 0) {\n      const stringPosition = localStorage.getItem('position');\n\n      if (stringPosition) {\n        const {\n          x,\n          y\n        } = JSON.parse(stringPosition); // rnd.updatePosition({x,y})\n\n        setState({ ...state,\n          x,\n          y\n        });\n      }\n    }\n  };\n\n  useEffect(getPositionIfRefreshPage, []);\n  useEffect(savePositionWhenTransformation, [transformNote]);\n\n  const onDragStopHandler = (event, data) => {\n    setState(update(state, {\n      $merge: {\n        x: data.x,\n        y: data.y\n      }\n    }));\n  };\n\n  const onResizeStopHandler = (e, direction, ref, delta, position) => {\n    console.log(\"direction\", direction);\n    console.log(\"ref\", ref);\n    console.log('delta', delta);\n    console.log(\"position\", position);\n    console.log(Rnd.arguments.ref);\n    setState({\n      width: ref.style.width,\n      height: ref.style.height,\n      ...position\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(Rnd, {\n    className: `${transformNote ? 'note' : ''}`,\n    disableDragging: transformNote,\n    style: { ...style,\n      transition: 'width height 1s'\n    },\n    size: {\n      width: state.width,\n      height: state.height\n    },\n    minWidth: 150,\n    minHeight: 150,\n    position: {\n      x: state.x,\n      y: state.y\n    },\n    onDragStop: onDragStopHandler,\n    onResizeStop: onResizeStopHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row color-buttons\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn btn-success\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn btn-danger\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn btn-secondary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"cross\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 13\n    }\n  }, \"\\xD7\"), transformNote ? /*#__PURE__*/React.createElement(\"textarea\", {\n    className: \"card h-100 w-100\",\n    style: {\n      resize: 'none',\n      backgroundColor: \"grey\"\n    },\n    value: text,\n    onChange: e => setText(e.target.value),\n    onDoubleClick: () => setTransformNote(false),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 25\n    }\n  }) : /*#__PURE__*/React.createElement(\"div\", {\n    className: \"h-100 w-100\",\n    style: {\n      backgroundColor: 'grey'\n    },\n    onDoubleClick: () => setTransformNote(true),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 25\n    }\n  }, text));\n};\n\nexport default App;","map":{"version":3,"sources":["/home/deathsmell/WebstormProjects/i-note-common/src/App.js"],"names":["React","useEffect","useRef","useState","Rnd","update","style","display","alignItems","justifyContent","border","background","App","transformNote","setTransformNote","text","setText","rnd","state","setState","width","height","x","y","savePositionWhenTransformation","console","log","localStorage","setItem","JSON","stringify","updatePosition","stringPosition","getItem","parse","getPositionIfRefreshPage","onDragStopHandler","event","data","$merge","onResizeStopHandler","e","direction","ref","delta","position","arguments","transition","resize","backgroundColor","target","value"],"mappings":"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","sourcesContent":["import React, {useEffect, useRef, useState} from \"react\"\nimport {Rnd} from \"react-rnd\"\nimport update from 'immutability-helper'\n\nconst style = {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    border: \"solid 1px #ddd\",\n    background: \"#f0f0f0\",\n};\n\nconst App = () => {\n\n    const [transformNote, setTransformNote] = useState(false);\n    const [text, setText] = useState('');\n    const rnd = useRef();\n\n    const [state, setState] = useState({\n        width: 200,\n        height: 200,\n        x: 0,\n        y: 0\n    });\n\n    const savePositionWhenTransformation = () => {\n        console.log(\"change\", state.x !== 0)\n        if (state.x !== 0 || state.y !== 0) {\n            localStorage.setItem('position', JSON.stringify({x: state.x, y: state.y}))\n            rnd.updatePosition({x:0,y:0})\n            // setState(\n            //     {...state, x: 0, y: 0}\n            // )\n        } else if (state.x === 0 && state.y === 0) {\n            const stringPosition = localStorage.getItem('position');\n            if (stringPosition) {\n                const {x, y} = JSON.parse(stringPosition);\n                // rnd.updatePosition({x,y})\n                setState({\n                    ...state,\n                    x, y\n                })\n            }\n        }\n    };\n\n    const getPositionIfRefreshPage = () => {\n        if (state.x === 0 && state.y === 0) {\n            const stringPosition = localStorage.getItem('position');\n            if (stringPosition) {\n                const {x, y} = JSON.parse(stringPosition);\n                // rnd.updatePosition({x,y})\n                setState({\n                    ...state,\n                    x, y\n                })\n            }\n        }\n    }\n\n    useEffect(getPositionIfRefreshPage, [])\n    useEffect(savePositionWhenTransformation, [transformNote])\n\n\n    const onDragStopHandler = (event, data) => {\n        setState(update(state,\n            {$merge: {x: data.x, y: data.y}}\n            )\n        )\n    }\n\n    const onResizeStopHandler = (e, direction, ref, delta, position) => {\n        console.log(\"direction\", direction);\n        console.log(\"ref\", ref);\n        console.log('delta', delta)\n        console.log(\"position\", position);\n        console.log(Rnd.arguments.ref);\n        setState({\n            width: ref.style.width,\n            height: ref.style.height,\n            ...position\n        });\n    }\n\n    return (\n        <Rnd\n            className={`${transformNote ? 'note' : ''}`}\n            disableDragging={transformNote}\n            style={{...style, transition: 'width height 1s'}}\n            size={{width: state.width, height: state.height}}\n            minWidth={150}\n            minHeight={150}\n            position={{x: state.x, y: state.y}}\n            onDragStop={onDragStopHandler}\n            onResizeStop={onResizeStopHandler}\n        >\n            <div className=\"row color-buttons\">\n                <button className=\"btn btn-success\"/>\n                <button className=\"btn btn-danger\"/>\n                <button className=\"btn btn-secondary\"/>\n            </div>\n            <div className=\"cross\">\n                &times;\n            </div>\n            {\n                transformNote\n                    ?\n                    (\n                        <textarea\n                            className=\"card h-100 w-100\"\n                            style={{resize: 'none', backgroundColor: \"grey\"}}\n                            value={text}\n                            onChange={(e) => setText(e.target.value)}\n                            onDoubleClick={() => setTransformNote(false)}\n                        >\n\n                            </textarea>\n                    )\n                    : (\n                        <div className=\"h-100 w-100\"\n                             style={{backgroundColor: 'grey'}}\n                             onDoubleClick={() => setTransformNote(true)}\n                        >\n                            {text}\n                        </div>\n                    )\n            }\n        </Rnd>\n    )\n}\n\nexport default App"]},"metadata":{},"sourceType":"module"}