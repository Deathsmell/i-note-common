{"ast":null,"code":"var _jsxFileName = \"/home/deathsmell/WebstormProjects/i-note-common/src/components/Note.js\";\nimport React, { useState } from \"react\";\nimport { Rnd } from \"react-rnd\";\nimport useNote from \"../hooks/note.hook\";\nimport { TypeMessage } from \"../hooks/TypeMessage\";\n\nconst Note = ({\n  note,\n  noteIndex,\n  notes,\n  setNotes,\n  connection\n}) => {\n  const [isDragging, setIsDragging] = useState(false);\n  const [zIndex, setZIndex] = useState(1);\n  const {\n    updateNote\n  } = useNote();\n\n  const updateStateNotes = updatedNote => {\n    setNotes(prev => [...prev.filter(note => note.id !== updatedNote.id), updatedNote]);\n  };\n\n  const sendNewPosition = (type, note) => connection.send(JSON.stringify({ ...note,\n    type\n  }));\n\n  const onDragStopHandler = (event, data) => {\n    const updatedNote = updateNote(note, {\n      x: data.x,\n      y: data.y\n    });\n    updateStateNotes(updatedNote);\n    sendNewPosition(TypeMessage.UPDATE, updatedNote);\n  };\n\n  const onResizeStopHandler = (e, direction, ref, delta, position) => {\n    const updatedNote = updateNote(note, {\n      width: ref.style.width,\n      height: ref.style.height,\n      x: position.x,\n      y: position.y\n    });\n    console.log(updatedNote);\n    updateStateNotes(updatedNote);\n    sendNewPosition(TypeMessage.UPDATE, updatedNote);\n  };\n\n  const deleteNoteHandler = () => {\n    sendNewPosition(TypeMessage.DELETE, note);\n    setNotes(prev => [...prev.filter(noteFromState => noteFromState.id !== note.id)]);\n  };\n\n  const changeColorHandler = e => {\n    const color = e.target.className.trim().replace(/^btn\\s*/, '');\n    const updatedNote = updateNote(note, {\n      color\n    });\n    sendNewPosition(TypeMessage.UPDATE, updatedNote);\n  };\n\n  const changeTextHandler = e => {\n    const text = e.target.value;\n    const updatedNote = updateNote(note, {\n      text\n    });\n    sendNewPosition(TypeMessage.UPDATE, updatedNote);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Rnd, {\n    className: \"note\",\n    disableDragging: isDragging,\n    style: {\n      zIndex: zIndex\n    },\n    size: {\n      width: notes[noteIndex].width,\n      height: notes[noteIndex].height\n    },\n    minWidth: 250,\n    minHeight: 250,\n    position: {\n      x: notes[noteIndex].x,\n      y: notes[noteIndex].y\n    },\n    onDragStop: onDragStopHandler,\n    onResizeStop: onResizeStopHandler,\n    bounds: \"window\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"note-header\",\n    style: {\n      backgroundColor: notes[noteIndex].color || \"gold\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"color-buttons\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn blue\",\n    onClick: changeColorHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn pink\",\n    onClick: changeColorHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn yellow\",\n    onClick: changeColorHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"cross\",\n    onClick: deleteNoteHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 21\n    }\n  }, \"\\xD7\")), /*#__PURE__*/React.createElement(\"textarea\", {\n    className: \"note-text\",\n    value: note.text,\n    onChange: changeTextHandler,\n    onFocus: () => setIsDragging(true),\n    onBlur: () => setIsDragging(false),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 17\n    }\n  })));\n};\n\nexport default Note;","map":{"version":3,"sources":["/home/deathsmell/WebstormProjects/i-note-common/src/components/Note.js"],"names":["React","useState","Rnd","useNote","TypeMessage","Note","note","noteIndex","notes","setNotes","connection","isDragging","setIsDragging","zIndex","setZIndex","updateNote","updateStateNotes","updatedNote","prev","filter","id","sendNewPosition","type","send","JSON","stringify","onDragStopHandler","event","data","x","y","UPDATE","onResizeStopHandler","e","direction","ref","delta","position","width","style","height","console","log","deleteNoteHandler","DELETE","noteFromState","changeColorHandler","color","target","className","trim","replace","changeTextHandler","text","value","backgroundColor"],"mappings":"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","sourcesContent":["import React, {useState} from \"react\"\nimport {Rnd} from \"react-rnd\"\nimport useNote from \"../hooks/note.hook\";\nimport {TypeMessage} from \"../hooks/TypeMessage\";\n\nconst Note = ({note, noteIndex, notes, setNotes, connection}) => {\n\n    const [isDragging, setIsDragging] = useState(false);\n    const [zIndex, setZIndex] = useState(1);\n    const {updateNote} = useNote();\n\n    const updateStateNotes = (updatedNote) => {\n        setNotes((prev) => [...prev.filter(note => note.id !== updatedNote.id), updatedNote])\n    }\n    const sendNewPosition = (type, note) => connection.send(JSON.stringify({...note, type}))\n\n    const onDragStopHandler = (event, data) => {\n        const updatedNote = updateNote(note, {x: data.x, y: data.y});\n        updateStateNotes(updatedNote)\n        sendNewPosition(TypeMessage.UPDATE, updatedNote)\n    }\n\n    const onResizeStopHandler = (e, direction, ref, delta, position) => {\n        const updatedNote = updateNote(note, {\n            width: ref.style.width,\n            height: ref.style.height,\n            x: position.x,\n            y: position.y,\n        });\n        console.log(updatedNote);\n        updateStateNotes(updatedNote)\n        sendNewPosition(TypeMessage.UPDATE, updatedNote)\n    }\n\n    const deleteNoteHandler = () => {\n        sendNewPosition(TypeMessage.DELETE, note)\n        setNotes((prev) => [...prev.filter(noteFromState => noteFromState.id !== note.id)])\n    }\n\n    const changeColorHandler = (e) => {\n        const color = e.target.className.trim().replace(/^btn\\s*/, '');\n        const updatedNote = updateNote(note, {color});\n        sendNewPosition(TypeMessage.UPDATE, updatedNote)\n    }\n\n    const changeTextHandler = (e) => {\n        const text = e.target.value;\n        const updatedNote = updateNote(note, {text});\n        sendNewPosition(TypeMessage.UPDATE, updatedNote)\n    }\n\n    return (\n        <div>\n            <Rnd\n                className=\"note\"\n                disableDragging={isDragging}\n                style={{zIndex: zIndex}}\n                size={{width: notes[noteIndex].width, height: notes[noteIndex].height}}\n                minWidth={250}\n                minHeight={250}\n                position={{x: notes[noteIndex].x, y: notes[noteIndex].y}}\n                onDragStop={onDragStopHandler}\n                onResizeStop={onResizeStopHandler}\n                bounds={\"window\"}\n            >\n                <div className=\"note-header\"\n                     style={{backgroundColor: notes[noteIndex].color || \"gold\"}}\n                >\n                    <div className=\"color-buttons\">\n                        <button className=\"btn blue\"\n                                onClick={changeColorHandler}\n                        />\n                        <button className=\"btn pink\"\n                                onClick={changeColorHandler}\n                        />\n                        <button className=\"btn yellow\"\n                                onClick={changeColorHandler}\n                        />\n                    </div>\n                    <div className=\"cross\"\n                         onClick={deleteNoteHandler}\n                    >\n                        &times;\n                    </div>\n                </div>\n                <textarea\n                    className=\"note-text\"\n                    value={note.text}\n                    onChange={changeTextHandler}\n                    onFocus={() => setIsDragging(true)}\n                    onBlur={() => setIsDragging(false)}\n                />\n            </Rnd>\n        </div>\n\n    )\n}\n\nexport default Note"]},"metadata":{},"sourceType":"module"}