{"ast":null,"code":"var _jsxFileName = \"/home/deathsmell/WebstormProjects/i-note-common/src/components/Note.js\";\nimport React, { useRef, useState } from \"react\";\nimport { Rnd } from \"react-rnd\";\nimport useNote from \"../hooks/note.hook\";\nimport { TypeMessage } from \"../hooks/TypeMessage\";\nconst style = {\n  display: \"flex\",\n  alignItems: \"center\",\n  justifyContent: \"center\",\n  border: \"solid 1px #ddd\",\n  background: \"#f0f0f0\"\n};\n\nconst Note = ({\n  note,\n  noteIndex,\n  notes,\n  setNotes,\n  connection\n}) => {\n  const rnd = useRef();\n  const [isDragging, setIsDragging] = useState(false);\n  const {\n    updateNote\n  } = useNote();\n\n  const updateStateNotes = updatedNote => {\n    setNotes(prev => [...prev.filter(note => note.id !== updatedNote.id), updatedNote]);\n  };\n\n  const sendNewPosition = (type, note) => connection.send(JSON.stringify({ ...note,\n    type\n  }));\n\n  const onDragStopHandler = (event, data) => {\n    const updatedNote = updateNote(note, {\n      x: data.x,\n      y: data.y\n    });\n    updateStateNotes(updatedNote);\n    sendNewPosition(TypeMessage.UPDATE, updatedNote);\n  };\n\n  const onResizeStopHandler = (e, direction, ref, delta, position) => {\n    const updatedNote = updateNote(note, {\n      width: ref.style.width,\n      height: ref.style.height,\n      x: position.x,\n      y: position.y\n    });\n    console.log(updatedNote);\n    updateStateNotes(updatedNote);\n    sendNewPosition(TypeMessage.UPDATE, updatedNote);\n  };\n\n  const deleteNoteHandler = () => {\n    sendNewPosition(TypeMessage.DELETE, note);\n    setNotes(prev => [...prev.filter(noteFromState => noteFromState.id !== note.id)]);\n  };\n\n  const changeColorHandler = e => {\n    const color = e.target.className.trim().replace(/^btn\\s*/, '');\n    const updatedNote = updateNote(note, {\n      color\n    });\n    sendNewPosition(TypeMessage.UPDATE, updatedNote);\n  };\n\n  const changeTextHandler = e => {\n    const text = e.target.value;\n    const updatedNote = updateNote(note, {\n      text\n    });\n    sendNewPosition(TypeMessage.UPDATE, updatedNote);\n  };\n\n  return /*#__PURE__*/React.createElement(Rnd, {\n    ref: rnd,\n    className: \"note\",\n    disableDragging: isDragging,\n    style: { ...style\n    },\n    size: {\n      width: notes[noteIndex].width,\n      height: notes[noteIndex].height\n    },\n    minWidth: 250,\n    minHeight: 250,\n    position: {\n      x: notes[noteIndex].x,\n      y: notes[noteIndex].y\n    },\n    onDragStop: onDragStopHandler,\n    onResizeStop: onResizeStopHandler,\n    bounds: \"window\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"note-header\",\n    style: {\n      backgroundColor: notes[noteIndex].color || \"gold\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"color-buttons\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn blue\",\n    onClick: changeColorHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn pink\",\n    onClick: changeColorHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn yellow\",\n    onClick: changeColorHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"cross\",\n    onClick: deleteNoteHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 17\n    }\n  }, \"\\xD7\")), /*#__PURE__*/React.createElement(\"textarea\", {\n    className: \"note-text\",\n    value: note.text,\n    onChange: changeTextHandler,\n    onFocus: () => setIsDragging(true),\n    onBlur: () => setIsDragging(false),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 13\n    }\n  }));\n};\n\nexport default Note;","map":{"version":3,"sources":["/home/deathsmell/WebstormProjects/i-note-common/src/components/Note.js"],"names":["React","useRef","useState","Rnd","useNote","TypeMessage","style","display","alignItems","justifyContent","border","background","Note","note","noteIndex","notes","setNotes","connection","rnd","isDragging","setIsDragging","updateNote","updateStateNotes","updatedNote","prev","filter","id","sendNewPosition","type","send","JSON","stringify","onDragStopHandler","event","data","x","y","UPDATE","onResizeStopHandler","e","direction","ref","delta","position","width","height","console","log","deleteNoteHandler","DELETE","noteFromState","changeColorHandler","color","target","className","trim","replace","changeTextHandler","text","value","backgroundColor"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,MAAf,EAAuBC,QAAvB,QAAsC,OAAtC;AACA,SAAQC,GAAR,QAAkB,WAAlB;AACA,OAAOC,OAAP,MAAoB,oBAApB;AACA,SAAQC,WAAR,QAA0B,sBAA1B;AAEA,MAAMC,KAAK,GAAG;AACVC,EAAAA,OAAO,EAAE,MADC;AAEVC,EAAAA,UAAU,EAAE,QAFF;AAGVC,EAAAA,cAAc,EAAE,QAHN;AAIVC,EAAAA,MAAM,EAAE,gBAJE;AAKVC,EAAAA,UAAU,EAAE;AALF,CAAd;;AAQA,MAAMC,IAAI,GAAG,CAAC;AAACC,EAAAA,IAAD;AAAOC,EAAAA,SAAP;AAAkBC,EAAAA,KAAlB;AAAyBC,EAAAA,QAAzB;AAAmCC,EAAAA;AAAnC,CAAD,KAAoD;AAG7D,QAAMC,GAAG,GAAGjB,MAAM,EAAlB;AACA,QAAM,CAACkB,UAAD,EAAaC,aAAb,IAA8BlB,QAAQ,CAAC,KAAD,CAA5C;AACA,QAAM;AAACmB,IAAAA;AAAD,MAAejB,OAAO,EAA5B;;AAEA,QAAMkB,gBAAgB,GAAIC,WAAD,IAAiB;AACtCP,IAAAA,QAAQ,CAAEQ,IAAD,IAAU,CAAC,GAAGA,IAAI,CAACC,MAAL,CAAYZ,IAAI,IAAIA,IAAI,CAACa,EAAL,KAAYH,WAAW,CAACG,EAA5C,CAAJ,EAAqDH,WAArD,CAAX,CAAR;AACH,GAFD;;AAGA,QAAMI,eAAe,GAAG,CAACC,IAAD,EAAOf,IAAP,KAAgBI,UAAU,CAACY,IAAX,CAAgBC,IAAI,CAACC,SAAL,CAAe,EAAC,GAAGlB,IAAJ;AAAUe,IAAAA;AAAV,GAAf,CAAhB,CAAxC;;AAEA,QAAMI,iBAAiB,GAAG,CAACC,KAAD,EAAQC,IAAR,KAAiB;AACvC,UAAMX,WAAW,GAAGF,UAAU,CAACR,IAAD,EAAO;AAACsB,MAAAA,CAAC,EAAED,IAAI,CAACC,CAAT;AAAYC,MAAAA,CAAC,EAAEF,IAAI,CAACE;AAApB,KAAP,CAA9B;AACAd,IAAAA,gBAAgB,CAACC,WAAD,CAAhB;AACAI,IAAAA,eAAe,CAACtB,WAAW,CAACgC,MAAb,EAAqBd,WAArB,CAAf;AACH,GAJD;;AAMA,QAAMe,mBAAmB,GAAG,CAACC,CAAD,EAAIC,SAAJ,EAAeC,GAAf,EAAoBC,KAApB,EAA2BC,QAA3B,KAAwC;AAChE,UAAMpB,WAAW,GAAGF,UAAU,CAACR,IAAD,EAAO;AACjC+B,MAAAA,KAAK,EAAEH,GAAG,CAACnC,KAAJ,CAAUsC,KADgB;AAEjCC,MAAAA,MAAM,EAAEJ,GAAG,CAACnC,KAAJ,CAAUuC,MAFe;AAGjCV,MAAAA,CAAC,EAAEQ,QAAQ,CAACR,CAHqB;AAIjCC,MAAAA,CAAC,EAAEO,QAAQ,CAACP;AAJqB,KAAP,CAA9B;AAMAU,IAAAA,OAAO,CAACC,GAAR,CAAYxB,WAAZ;AACAD,IAAAA,gBAAgB,CAACC,WAAD,CAAhB;AACAI,IAAAA,eAAe,CAACtB,WAAW,CAACgC,MAAb,EAAqBd,WAArB,CAAf;AACH,GAVD;;AAYA,QAAMyB,iBAAiB,GAAG,MAAM;AAC5BrB,IAAAA,eAAe,CAACtB,WAAW,CAAC4C,MAAb,EAAqBpC,IAArB,CAAf;AACAG,IAAAA,QAAQ,CAAEQ,IAAD,IAAU,CAAC,GAAGA,IAAI,CAACC,MAAL,CAAYyB,aAAa,IAAIA,aAAa,CAACxB,EAAd,KAAqBb,IAAI,CAACa,EAAvD,CAAJ,CAAX,CAAR;AACH,GAHD;;AAKA,QAAMyB,kBAAkB,GAAIZ,CAAD,IAAO;AAC9B,UAAMa,KAAK,GAAGb,CAAC,CAACc,MAAF,CAASC,SAAT,CAAmBC,IAAnB,GAA0BC,OAA1B,CAAkC,SAAlC,EAA6C,EAA7C,CAAd;AACA,UAAMjC,WAAW,GAAGF,UAAU,CAACR,IAAD,EAAO;AAACuC,MAAAA;AAAD,KAAP,CAA9B;AACAzB,IAAAA,eAAe,CAACtB,WAAW,CAACgC,MAAb,EAAqBd,WAArB,CAAf;AACH,GAJD;;AAMA,QAAMkC,iBAAiB,GAAIlB,CAAD,IAAO;AAC7B,UAAMmB,IAAI,GAAGnB,CAAC,CAACc,MAAF,CAASM,KAAtB;AACA,UAAMpC,WAAW,GAAGF,UAAU,CAACR,IAAD,EAAO;AAAC6C,MAAAA;AAAD,KAAP,CAA9B;AACA/B,IAAAA,eAAe,CAACtB,WAAW,CAACgC,MAAb,EAAqBd,WAArB,CAAf;AACH,GAJD;;AAMA,sBACI,oBAAC,GAAD;AACI,IAAA,GAAG,EAAEL,GADT;AAEI,IAAA,SAAS,EAAC,MAFd;AAGI,IAAA,eAAe,EAAEC,UAHrB;AAII,IAAA,KAAK,EAAE,EAAC,GAAGb;AAAJ,KAJX;AAKI,IAAA,IAAI,EAAE;AAACsC,MAAAA,KAAK,EAAE7B,KAAK,CAACD,SAAD,CAAL,CAAiB8B,KAAzB;AAAgCC,MAAAA,MAAM,EAAE9B,KAAK,CAACD,SAAD,CAAL,CAAiB+B;AAAzD,KALV;AAMI,IAAA,QAAQ,EAAE,GANd;AAOI,IAAA,SAAS,EAAE,GAPf;AAQI,IAAA,QAAQ,EAAE;AAACV,MAAAA,CAAC,EAAEpB,KAAK,CAACD,SAAD,CAAL,CAAiBqB,CAArB;AAAwBC,MAAAA,CAAC,EAAErB,KAAK,CAACD,SAAD,CAAL,CAAiBsB;AAA5C,KARd;AASI,IAAA,UAAU,EAAEJ,iBAThB;AAUI,IAAA,YAAY,EAAEM,mBAVlB;AAWI,IAAA,MAAM,EAAE,QAXZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAaI;AAAK,IAAA,SAAS,EAAC,aAAf;AACK,IAAA,KAAK,EAAE;AAACsB,MAAAA,eAAe,EAAE7C,KAAK,CAACD,SAAD,CAAL,CAAiBsC,KAAjB,IAA0B;AAA5C,KADZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAGI;AAAK,IAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAQ,IAAA,SAAS,EAAC,UAAlB;AACQ,IAAA,OAAO,EAAED,kBADjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eAII;AAAQ,IAAA,SAAS,EAAC,UAAlB;AACQ,IAAA,OAAO,EAAEA,kBADjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJJ,eAOI;AAAQ,IAAA,SAAS,EAAC,YAAlB;AACQ,IAAA,OAAO,EAAEA,kBADjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPJ,CAHJ,eAcI;AAAK,IAAA,SAAS,EAAC,OAAf;AACK,IAAA,OAAO,EAAEH,iBADd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAdJ,CAbJ,eAiCI;AACI,IAAA,SAAS,EAAC,WADd;AAEI,IAAA,KAAK,EAAEnC,IAAI,CAAC6C,IAFhB;AAGI,IAAA,QAAQ,EAAED,iBAHd;AAII,IAAA,OAAO,EAAE,MAAMrC,aAAa,CAAC,IAAD,CAJhC;AAKI,IAAA,MAAM,EAAE,MAAMA,aAAa,CAAC,KAAD,CAL/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAjCJ,CADJ;AA2CH,CA1FD;;AA4FA,eAAeR,IAAf","sourcesContent":["import React, {useRef, useState} from \"react\"\nimport {Rnd} from \"react-rnd\"\nimport useNote from \"../hooks/note.hook\";\nimport {TypeMessage} from \"../hooks/TypeMessage\";\n\nconst style = {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    border: \"solid 1px #ddd\",\n    background: \"#f0f0f0\",\n};\n\nconst Note = ({note, noteIndex, notes, setNotes, connection}) => {\n\n\n    const rnd = useRef();\n    const [isDragging, setIsDragging] = useState(false);\n    const {updateNote} = useNote();\n\n    const updateStateNotes = (updatedNote) => {\n        setNotes((prev) => [...prev.filter(note => note.id !== updatedNote.id), updatedNote])\n    }\n    const sendNewPosition = (type, note) => connection.send(JSON.stringify({...note, type}))\n\n    const onDragStopHandler = (event, data) => {\n        const updatedNote = updateNote(note, {x: data.x, y: data.y});\n        updateStateNotes(updatedNote)\n        sendNewPosition(TypeMessage.UPDATE, updatedNote)\n    }\n\n    const onResizeStopHandler = (e, direction, ref, delta, position) => {\n        const updatedNote = updateNote(note, {\n            width: ref.style.width,\n            height: ref.style.height,\n            x: position.x,\n            y: position.y,\n        });\n        console.log(updatedNote);\n        updateStateNotes(updatedNote)\n        sendNewPosition(TypeMessage.UPDATE, updatedNote)\n    }\n\n    const deleteNoteHandler = () => {\n        sendNewPosition(TypeMessage.DELETE, note)\n        setNotes((prev) => [...prev.filter(noteFromState => noteFromState.id !== note.id)])\n    }\n\n    const changeColorHandler = (e) => {\n        const color = e.target.className.trim().replace(/^btn\\s*/, '');\n        const updatedNote = updateNote(note, {color});\n        sendNewPosition(TypeMessage.UPDATE, updatedNote)\n    }\n\n    const changeTextHandler = (e) => {\n        const text = e.target.value;\n        const updatedNote = updateNote(note, {text});\n        sendNewPosition(TypeMessage.UPDATE, updatedNote)\n    }\n\n    return (\n        <Rnd\n            ref={rnd}\n            className=\"note\"\n            disableDragging={isDragging}\n            style={{...style}}\n            size={{width: notes[noteIndex].width, height: notes[noteIndex].height}}\n            minWidth={250}\n            minHeight={250}\n            position={{x: notes[noteIndex].x, y: notes[noteIndex].y}}\n            onDragStop={onDragStopHandler}\n            onResizeStop={onResizeStopHandler}\n            bounds={\"window\"}\n        >\n            <div className=\"note-header\"\n                 style={{backgroundColor: notes[noteIndex].color || \"gold\"}}\n            >\n                <div className=\"color-buttons\">\n                    <button className=\"btn blue\"\n                            onClick={changeColorHandler}\n                    />\n                    <button className=\"btn pink\"\n                            onClick={changeColorHandler}\n                    />\n                    <button className=\"btn yellow\"\n                            onClick={changeColorHandler}\n                    />\n                </div>\n                <div className=\"cross\"\n                     onClick={deleteNoteHandler}\n                >\n                    &times;\n                </div>\n            </div>\n            <textarea\n                className=\"note-text\"\n                value={note.text}\n                onChange={changeTextHandler}\n                onFocus={() => setIsDragging(true)}\n                onBlur={() => setIsDragging(false)}\n            />\n        </Rnd>\n    )\n}\n\nexport default Note"]},"metadata":{},"sourceType":"module"}