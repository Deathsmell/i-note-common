{"ast":null,"code":"var _jsxFileName = \"/home/deathsmell/WebstormProjects/i-note-common/src/components/Note.js\";\nimport React, { useEffect, useRef, useState } from \"react\";\nimport { Rnd } from \"react-rnd\";\nimport useNote from \"../hooks/note.hook\";\nimport useLocal from \"../hooks/local.hook\";\nimport { TypeMessage } from '../hooks/TypeMessage';\nconst style = {\n  display: \"flex\",\n  alignItems: \"center\",\n  justifyContent: \"center\",\n  border: \"solid 1px #ddd\",\n  background: \"#f0f0f0\"\n};\n\nconst Note = ({\n  height,\n  width,\n  x,\n  y,\n  noteId,\n  color,\n  serverText,\n  notes,\n  setNotes,\n  connection\n}) => {\n  const rnd = useRef();\n  const [transformNote, setTransformNote] = useState(false);\n  const [text, setText] = useState(serverText);\n  const [mounted, setMounted] = useState(true);\n  const {\n    removeInLocal,\n    saveInLocal,\n    getFromLocal\n  } = useLocal();\n  const {\n    updateNote\n  } = useNote();\n\n  const getNote = () => notes.find(note => note.id === noteId);\n\n  const updateStateNotes = updatedNote => setNotes(notes.splice(noteId, updatedNote));\n\n  const sendNewPosition = (note, type) => connection.send(JSON.stringify({ ...note,\n    type\n  }));\n\n  useEffect(function () {\n    setMounted(true);\n    console.log(\"mounted\");\n    return () => {\n      console.log(\"unmounted\");\n      setMounted(false);\n    };\n  }, []);\n  useEffect(function savePositionWhenTransformation() {\n    const note = getNote();\n\n    if (transformNote && (x !== 0 || y !== 0)) {\n      const updatedNote = updateNote(note, {\n        x,\n        y\n      });\n      saveInLocal(noteId, updatedNote);\n      updateStateNotes({ ...note,\n        x: 0,\n        y: 0\n      });\n    } else if (x === 0 && y === 0) {\n      const stringPosition = getFromLocal(noteId);\n\n      if (stringPosition) {\n        const parse = JSON.parse(stringPosition);\n        const updatedNote = updateNote(note, {\n          width: parse.width,\n          height: parse.height,\n          x: parse.x,\n          y: parse.y\n        });\n        setNotes(updatedNote);\n      }\n    }\n  }, [transformNote]);\n\n  const onDragStopHandler = (event, data) => {\n    const note = getNote();\n    const updatedNote = updateNote(note, {\n      x: data.x,\n      y: data.y\n    }); // saveInLocal(noteId, updatedNote)\n\n    updateStateNotes(updatedNote);\n  };\n\n  const onResizeStopHandler = (e, direction, ref, delta, position) => {\n    const updatedNote = updateNote(getNote(), {\n      width: ref.style.width,\n      height: ref.style.height,\n      x: position.x,\n      y: position.y\n    });\n    updateStateNotes(updatedNote);\n  };\n\n  const deleteNoteHandler = () => {\n    // todo: create delete function on cross icon\n    console.log(\"Nothing to do\");\n  };\n\n  return /*#__PURE__*/React.createElement(Rnd, {\n    ref: rnd,\n    className: `note${transformNote ? '-activate' : ''}`,\n    disableDragging: transformNote,\n    style: { ...style\n    },\n    size: {\n      width,\n      height\n    },\n    minWidth: 250,\n    minHeight: 250,\n    position: {\n      x,\n      y\n    },\n    onDragStop: onDragStopHandler,\n    onResizeStop: onResizeStopHandler,\n    bounds: \"window\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"note-header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"color-buttons\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn btn-success\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn btn-danger\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn btn-secondary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"cross\",\n    onClick: deleteNoteHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 17\n    }\n  }, \"\\xD7\")), transformNote ? /*#__PURE__*/React.createElement(\"textarea\", {\n    className: \"note-text\",\n    style: {\n      backgroundColor: color || \"grey\"\n    },\n    value: text,\n    onChange: e => setText(e.target.value),\n    onDoubleClick: () => setTransformNote(false),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 25\n    }\n  }) : /*#__PURE__*/React.createElement(\"div\", {\n    className: \"note-body\",\n    style: {\n      backgroundColor: color || \"grey\"\n    },\n    onDoubleClick: () => setTransformNote(true),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 25\n    }\n  }, text));\n};\n\nexport default Note;","map":{"version":3,"sources":["/home/deathsmell/WebstormProjects/i-note-common/src/components/Note.js"],"names":["React","useEffect","useRef","useState","Rnd","useNote","useLocal","TypeMessage","style","display","alignItems","justifyContent","border","background","Note","height","width","x","y","noteId","color","serverText","notes","setNotes","connection","rnd","transformNote","setTransformNote","text","setText","mounted","setMounted","removeInLocal","saveInLocal","getFromLocal","updateNote","getNote","find","note","id","updateStateNotes","updatedNote","splice","sendNewPosition","type","send","JSON","stringify","console","log","savePositionWhenTransformation","stringPosition","parse","onDragStopHandler","event","data","onResizeStopHandler","e","direction","ref","delta","position","deleteNoteHandler","backgroundColor","target","value"],"mappings":"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","sourcesContent":["import React, {useEffect, useRef, useState} from \"react\"\nimport {Rnd} from \"react-rnd\"\nimport useNote from \"../hooks/note.hook\";\nimport useLocal from \"../hooks/local.hook\";\nimport {TypeMessage} from '../hooks/TypeMessage'\n\nconst style = {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    border: \"solid 1px #ddd\",\n    background: \"#f0f0f0\",\n};\n\nconst Note = ({height, width, x, y, noteId, color, serverText, notes, setNotes, connection}) => {\n\n\n    const rnd = useRef();\n    const [transformNote, setTransformNote] = useState(false);\n    const [text, setText] = useState(serverText);\n    const [mounted, setMounted] = useState(true)\n    const {removeInLocal, saveInLocal, getFromLocal} = useLocal();\n    const {updateNote} = useNote();\n\n    const getNote = () => notes.find(note => note.id === noteId)\n    const updateStateNotes = updatedNote => setNotes(notes.splice(noteId, updatedNote))\n    const sendNewPosition = (note, type) => connection.send(JSON.stringify({...note, type}))\n\n    useEffect(function () {\n        setMounted(true)\n        console.log(\"mounted\")\n        return () => {\n            console.log(\"unmounted\")\n            setMounted(false)\n        }\n    }, [])\n\n\n    useEffect(function savePositionWhenTransformation() {\n        const note = getNote();\n        if (transformNote && (x !== 0 || y !== 0)) {\n            const updatedNote = updateNote(note, {x, y});\n            saveInLocal(noteId, updatedNote)\n            updateStateNotes({...note, x: 0, y: 0});\n        } else if (x === 0 && y === 0) {\n            const stringPosition = getFromLocal(noteId)\n            if (stringPosition) {\n                const parse = JSON.parse(stringPosition);\n                const updatedNote = updateNote(note, {\n                    width: parse.width,\n                    height: parse.height,\n                    x: parse.x,\n                    y: parse.y\n                });\n                setNotes(updatedNote)\n            }\n        }\n    }, [transformNote])\n\n\n    const onDragStopHandler = (event, data) => {\n        const note = getNote();\n        const updatedNote = updateNote(note, {x: data.x, y: data.y});\n        // saveInLocal(noteId, updatedNote)\n        updateStateNotes(updatedNote)\n    }\n\n    const onResizeStopHandler = (e, direction, ref, delta, position) => {\n        const updatedNote = updateNote(getNote(), {\n            width: ref.style.width,\n            height: ref.style.height,\n            x: position.x,\n            y: position.y\n        });\n        updateStateNotes(updatedNote)\n    }\n\n    const deleteNoteHandler = () => {\n        // todo: create delete function on cross icon\n        console.log(\"Nothing to do\")\n    }\n\n    return (\n        <Rnd\n            ref={rnd}\n            className={`note${transformNote ? '-activate' : ''}`}\n            disableDragging={transformNote}\n            style={{...style}}\n            size={{width, height}}\n            minWidth={250}\n            minHeight={250}\n            position={{x, y}}\n            onDragStop={onDragStopHandler}\n            onResizeStop={onResizeStopHandler}\n            bounds={\"window\"}\n        >\n            <div className=\"note-header\">\n                <div className=\"color-buttons\">\n                    <button className=\"btn btn-success\"/>\n                    <button className=\"btn btn-danger\"/>\n                    <button className=\"btn btn-secondary\"/>\n                </div>\n                <div className=\"cross\"\n                     onClick={deleteNoteHandler}\n                >\n                    &times;\n                </div>\n            </div>\n            {\n                transformNote\n                    ?\n                    (\n                        <textarea\n                            className=\"note-text\"\n                            style={{backgroundColor: color || \"grey\"}}\n                            value={text}\n                            onChange={(e) => setText(e.target.value)}\n                            onDoubleClick={() => setTransformNote(false)}\n                        >\n\n                            </textarea>\n                    )\n                    : (\n                        <div className=\"note-body\"\n                             style={{backgroundColor: color || \"grey\"}}\n                             onDoubleClick={() => setTransformNote(true)}\n                        >\n                            {text}\n                        </div>\n                    )\n            }\n        </Rnd>\n    )\n}\n\nexport default Note"]},"metadata":{},"sourceType":"module"}