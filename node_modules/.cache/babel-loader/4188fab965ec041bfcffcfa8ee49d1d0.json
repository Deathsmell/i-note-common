{"ast":null,"code":"var _jsxFileName = \"/home/deathsmell/WebstormProjects/i-note-common/src/components/Note.jsx\";\nimport React, { useCallback, useEffect, useState } from \"react\";\nimport { Rnd } from \"react-rnd\";\nimport useNote from \"../hooks/note.hook\";\nimport { TypeMessage } from \"../hooks/TypeMessage\";\nimport { markdown } from 'markdown';\n\nconst Note = ({\n  note,\n  noteIndex,\n  notes,\n  setNotes,\n  connection\n}) => {\n  const [isDragging, setIsDragging] = useState(false);\n  const [changed, setChanged] = useState(false);\n  const [zIndex, setZIndex] = useState(1);\n  const [text, setText] = useState(note.text);\n  const [mdText, setMdText] = useState(markdown.toHTML(note.text));\n  const {\n    updateNote\n  } = useNote();\n  useEffect(() => {\n    return () => {\n      setZIndex(1);\n    };\n  });\n\n  const updateStateNotes = updatedNote => {\n    setNotes(prev => [...prev.filter(note => note.id !== updatedNote.id), updatedNote]);\n  };\n\n  const sendNewPosition = (type, note) => connection.send(JSON.stringify({ ...note,\n    type\n  }));\n\n  const onDragStopHandler = (event, data) => {\n    const updatedNote = updateNote(note, {\n      x: data.x,\n      y: data.y\n    });\n    updateStateNotes(updatedNote);\n    sendNewPosition(TypeMessage.UPDATE, updatedNote);\n  };\n\n  const onResizeStopHandler = (e, direction, ref, delta, position) => {\n    const updatedNote = updateNote(note, {\n      width: ref.style.width,\n      height: ref.style.height,\n      x: position.x,\n      y: position.y\n    });\n    updateStateNotes(updatedNote);\n    sendNewPosition(TypeMessage.UPDATE, updatedNote);\n  };\n\n  const deleteNoteHandler = () => {\n    sendNewPosition(TypeMessage.DELETE, note);\n    setNotes(prev => [...prev.filter(noteFromState => noteFromState.id !== note.id)]);\n  };\n\n  const changeColorHandler = e => {\n    const color = e.target.className.trim().replace(/^btn\\s*/, '');\n    const updatedNote = updateNote(note, {\n      color\n    });\n    sendNewPosition(TypeMessage.UPDATE, updatedNote);\n  };\n\n  const changeTextHandler = e => {\n    const text = e.target.value;\n    setMdText(markdown.toHTML(text));\n    setText(text);\n  };\n\n  useEffect(function saveChangeText() {\n    if (!changed) {\n      const updatedNote = updateNote(note, {\n        text\n      });\n      sendNewPosition(TypeMessage.UPDATE, updatedNote);\n    }\n  }, [changed]);\n  const createMarkup = useCallback(() => {\n    return {\n      __html: mdText\n    };\n  }, [mdText]);\n  return /*#__PURE__*/React.createElement(Rnd, {\n    className: \"note\",\n    disableDragging: isDragging,\n    style: {\n      zIndex: zIndex\n    },\n    size: {\n      width: notes[noteIndex].width,\n      height: notes[noteIndex].height\n    },\n    minWidth: 250,\n    minHeight: 250,\n    position: {\n      x: notes[noteIndex].x,\n      y: notes[noteIndex].y\n    },\n    onDragStop: onDragStopHandler,\n    onResizeStop: onResizeStopHandler,\n    bounds: \"window\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"note-header\",\n    style: {\n      backgroundColor: notes[noteIndex].color || \"gold\"\n    },\n    onClick: () => setZIndex(2),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"color-buttons\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn blue\",\n    onClick: changeColorHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn pink\",\n    onClick: changeColorHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn yellow\",\n    onClick: changeColorHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"cross\",\n    onClick: deleteNoteHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 17\n    }\n  }, \"\\xD7\")), changed ? /*#__PURE__*/React.createElement(\"textarea\", {\n    className: \"note-text\",\n    value: text,\n    onChange: changeTextHandler,\n    autoFocus: true,\n    onBlur: () => {\n      setIsDragging(false);\n      setChanged(false);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 25\n    }\n  }) : /*#__PURE__*/React.createElement(\"div\", {\n    id: \"preview\",\n    className: \"note-body\",\n    onClick: () => {\n      setIsDragging(true);\n      setChanged(true);\n    },\n    dangerouslySetInnerHTML: createMarkup(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 25\n    }\n  }));\n};\n\nexport default Note;","map":{"version":3,"sources":["/home/deathsmell/WebstormProjects/i-note-common/src/components/Note.jsx"],"names":["React","useCallback","useEffect","useState","Rnd","useNote","TypeMessage","markdown","Note","note","noteIndex","notes","setNotes","connection","isDragging","setIsDragging","changed","setChanged","zIndex","setZIndex","text","setText","mdText","setMdText","toHTML","updateNote","updateStateNotes","updatedNote","prev","filter","id","sendNewPosition","type","send","JSON","stringify","onDragStopHandler","event","data","x","y","UPDATE","onResizeStopHandler","e","direction","ref","delta","position","width","style","height","deleteNoteHandler","DELETE","noteFromState","changeColorHandler","color","target","className","trim","replace","changeTextHandler","value","saveChangeText","createMarkup","__html","backgroundColor"],"mappings":"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","sourcesContent":["import React, {useCallback, useEffect, useState} from \"react\"\nimport {Rnd} from \"react-rnd\"\nimport useNote from \"../hooks/note.hook\";\nimport {TypeMessage} from \"../hooks/TypeMessage\";\nimport {markdown} from 'markdown'\n\nconst Note = ({note, noteIndex, notes, setNotes, connection}) => {\n\n    const [isDragging, setIsDragging] = useState(false);\n    const [changed, setChanged] = useState(false);\n    const [zIndex, setZIndex] = useState(1);\n    const [text, setText] = useState(note.text);\n    const [mdText, setMdText] = useState(markdown.toHTML(note.text));\n    const {updateNote} = useNote();\n\n    useEffect(() => {\n        return () => {\n            setZIndex(1)\n        }\n    })\n\n    const updateStateNotes = (updatedNote) => {\n        setNotes((prev) => [...prev.filter(note => note.id !== updatedNote.id), updatedNote])\n    }\n    const sendNewPosition = (type, note) => connection.send(JSON.stringify({...note, type}))\n\n    const onDragStopHandler = (event, data) => {\n        const updatedNote = updateNote(note, {x: data.x, y: data.y});\n        updateStateNotes(updatedNote)\n        sendNewPosition(TypeMessage.UPDATE, updatedNote)\n    }\n\n    const onResizeStopHandler = (e, direction, ref, delta, position) => {\n        const updatedNote = updateNote(note, {\n            width: ref.style.width,\n            height: ref.style.height,\n            x: position.x,\n            y: position.y,\n        });\n        updateStateNotes(updatedNote)\n        sendNewPosition(TypeMessage.UPDATE, updatedNote)\n    }\n\n    const deleteNoteHandler = () => {\n        sendNewPosition(TypeMessage.DELETE, note)\n        setNotes((prev) => [...prev.filter(noteFromState => noteFromState.id !== note.id)])\n    }\n\n    const changeColorHandler = (e) => {\n        const color = e.target.className.trim().replace(/^btn\\s*/, '');\n        const updatedNote = updateNote(note, {color});\n        sendNewPosition(TypeMessage.UPDATE, updatedNote)\n    }\n\n    const changeTextHandler = (e) => {\n        const text = e.target.value;\n        setMdText(markdown.toHTML(text))\n        setText(text)\n    }\n\n    useEffect(function saveChangeText() {\n        if (!changed) {\n            const updatedNote = updateNote(note, {text});\n            sendNewPosition(TypeMessage.UPDATE, updatedNote)\n        }\n    }, [changed])\n\n    const createMarkup = useCallback(() => {\n        return {\n            __html: mdText\n        }\n    },[mdText])\n\n\n    return (\n        <Rnd\n            className=\"note\"\n            disableDragging={isDragging}\n            style={{zIndex: zIndex}}\n            size={{width: notes[noteIndex].width, height: notes[noteIndex].height}}\n            minWidth={250}\n            minHeight={250}\n            position={{x: notes[noteIndex].x, y: notes[noteIndex].y}}\n            onDragStop={onDragStopHandler}\n            onResizeStop={onResizeStopHandler}\n            bounds={\"window\"}\n        >\n            <div className=\"note-header\"\n                 style={{backgroundColor: notes[noteIndex].color || \"gold\"}}\n                 onClick={() => setZIndex(2)}\n            >\n                <div className=\"color-buttons\">\n                    <button className=\"btn blue\"\n                            onClick={changeColorHandler}\n                    />\n                    <button className=\"btn pink\"\n                            onClick={changeColorHandler}\n                    />\n                    <button className=\"btn yellow\"\n                            onClick={changeColorHandler}\n                    />\n                </div>\n                <div className=\"cross\"\n                     onClick={deleteNoteHandler}\n                >\n                    &times;\n                </div>\n            </div>\n            {\n                changed\n                    ? (\n                        <textarea\n                            className=\"note-text\"\n                            value={text}\n                            onChange={changeTextHandler}\n                            autoFocus\n                            onBlur={() => {\n                                setIsDragging(false)\n                                setChanged(false)\n                            }}\n                        />\n\n                    )\n                    : (\n                        <div id=\"preview\"\n                             className=\"note-body\"\n                             onClick={() => {\n                                 setIsDragging(true)\n                                 setChanged(true)\n                             }}\n                             dangerouslySetInnerHTML={createMarkup()}\n                        />\n                    )\n            }\n        </Rnd>\n    )\n}\n\nexport default Note"]},"metadata":{},"sourceType":"module"}