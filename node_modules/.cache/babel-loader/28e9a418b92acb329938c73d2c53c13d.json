{"ast":null,"code":"import { useEffect, useState } from \"react\";\nimport useLocal from \"./local.hook\";\nimport { TypeMessage } from \"./TypeMessage\";\n\nconst useWS = updateHandler => {\n  const [connection, setConnection] = useState(null);\n  const {\n    saveInLocal,\n    getFromLocal,\n    removeInLocal\n  } = useLocal(); // const getPositions = ({data}) => {\n  //     console.log(\"get positions\", data)\n  //     if (data) {\n  //         const serverNotes = JSON.parse(data);\n  //         setNotes(serverNotes)\n  //         serverNotes.forEach(note => {\n  //             saveInLocal(note.id, note)\n  //         })\n  //     }\n  // }\n\n  const test = data => {\n    console.log(data);\n  };\n\n  useEffect(() => {\n    if (connection === null) {\n      const url = window.location.href.replace(/^http/, 'ws').replace(/3000\\/$/, '5000/');\n      console.log(url);\n      const webSocket = new WebSocket(url);\n      webSocket.onmessage = updateHandler;\n      webSocket.onopen = test;\n      setConnection(webSocket);\n    }\n  }, [connection]);\n  return {\n    connection\n  };\n};\n\nexport default useWS;","map":{"version":3,"sources":["/home/deathsmell/WebstormProjects/i-note-common/src/hooks/ws.hook.js"],"names":["useEffect","useState","useLocal","TypeMessage","useWS","updateHandler","connection","setConnection","saveInLocal","getFromLocal","removeInLocal","test","data","console","log","url","window","location","href","replace","webSocket","WebSocket","onmessage","onopen"],"mappings":"AAAA,SAAQA,SAAR,EAAmBC,QAAnB,QAAkC,OAAlC;AACA,OAAOC,QAAP,MAAqB,cAArB;AACA,SAAQC,WAAR,QAA0B,eAA1B;;AAGA,MAAMC,KAAK,GAAIC,aAAD,IAAmB;AAE7B,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BN,QAAQ,CAAC,IAAD,CAA5C;AACA,QAAM;AAACO,IAAAA,WAAD;AAAcC,IAAAA,YAAd;AAA4BC,IAAAA;AAA5B,MAA6CR,QAAQ,EAA3D,CAH6B,CAK7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,QAAMS,IAAI,GAAIC,IAAD,IAAU;AACnBC,IAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACH,GAFD;;AAIAZ,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAIM,UAAU,KAAK,IAAnB,EAAyB;AACrB,YAAMS,GAAG,GAAGC,MAAM,CAACC,QAAP,CAAgBC,IAAhB,CACPC,OADO,CACC,OADD,EACU,IADV,EAEPA,OAFO,CAEC,SAFD,EAEY,OAFZ,CAAZ;AAGAN,MAAAA,OAAO,CAACC,GAAR,CAAYC,GAAZ;AACA,YAAMK,SAAS,GAAG,IAAIC,SAAJ,CAAcN,GAAd,CAAlB;AACAK,MAAAA,SAAS,CAACE,SAAV,GAAsBjB,aAAtB;AACAe,MAAAA,SAAS,CAACG,MAAV,GAAmBZ,IAAnB;AACAJ,MAAAA,aAAa,CAACa,SAAD,CAAb;AACH;AACJ,GAXQ,EAWN,CAACd,UAAD,CAXM,CAAT;AAaA,SAAO;AAACA,IAAAA;AAAD,GAAP;AACH,CAlCD;;AAoCA,eAAeF,KAAf","sourcesContent":["import {useEffect, useState} from \"react\";\nimport useLocal from \"./local.hook\";\nimport {TypeMessage} from \"./TypeMessage\";\n\n\nconst useWS = (updateHandler) => {\n\n    const [connection, setConnection] = useState(null);\n    const {saveInLocal, getFromLocal, removeInLocal} = useLocal();\n\n    // const getPositions = ({data}) => {\n    //     console.log(\"get positions\", data)\n    //     if (data) {\n    //         const serverNotes = JSON.parse(data);\n    //         setNotes(serverNotes)\n    //         serverNotes.forEach(note => {\n    //             saveInLocal(note.id, note)\n    //         })\n    //     }\n    // }\n\n    const test = (data) => {\n        console.log(data)\n    }\n\n    useEffect(() => {\n        if (connection === null) {\n            const url = window.location.href\n                .replace(/^http/, 'ws')\n                .replace(/3000\\/$/, '5000/');\n            console.log(url)\n            const webSocket = new WebSocket(url)\n            webSocket.onmessage = updateHandler\n            webSocket.onopen = test\n            setConnection(webSocket)\n        }\n    }, [connection])\n\n    return {connection}\n}\n\nexport default useWS"]},"metadata":{},"sourceType":"module"}