{"ast":null,"code":"var _jsxFileName = \"/home/deathsmell/WebstormProjects/i-note-common/src/components/Note.js\";\nimport React, { useEffect, useRef, useState } from \"react\";\nimport { Rnd } from \"react-rnd\";\nimport useNote from \"../hooks/note.hook\";\nimport useLocal from \"../hooks/local.hook\";\nimport { TypeMessage } from \"../hooks/TypeMessage\";\nconst style = {\n  display: \"flex\",\n  alignItems: \"center\",\n  justifyContent: \"center\",\n  border: \"solid 1px #ddd\",\n  background: \"#f0f0f0\"\n};\n\nconst Note = ({\n  note,\n  noteIndex,\n  noteId,\n  serverText,\n  notes,\n  setNotes,\n  connection\n}) => {\n  const rnd = useRef();\n  const [transformNote, setTransformNote] = useState(false);\n  const [text, setText] = useState(serverText);\n  const {\n    removeInLocal,\n    saveInLocal,\n    getFromLocal\n  } = useLocal();\n  const {\n    updateNote\n  } = useNote();\n\n  const updateStateNotes = (index, updatedNote) => {\n    setNotes(prev => [...prev.filter(note => note.id !== updatedNote.id), updatedNote]);\n  };\n\n  const sendNewPosition = (type, note) => connection.send(JSON.stringify({ ...note,\n    type\n  }));\n\n  useEffect(function watchNotes() {\n    console.log('Update notes', notes);\n  }, [notes]);\n\n  const onDragStopHandler = (event, data) => {\n    const updatedNote = updateNote(note, {\n      x: data.x,\n      y: data.y\n    });\n    saveInLocal(noteId, updatedNote);\n    updateStateNotes(noteIndex, updatedNote);\n    sendNewPosition(TypeMessage.UPDATE, updatedNote);\n  };\n\n  const onResizeStopHandler = (e, direction, ref, delta, position) => {\n    const updatedNote = updateNote(note, {\n      width: ref.style.width,\n      height: ref.style.height,\n      x: position.x,\n      y: position.y\n    });\n    saveInLocal(noteId, updatedNote);\n    updateStateNotes(noteId, updatedNote);\n    sendNewPosition(TypeMessage.UPDATE, updatedNote);\n  };\n\n  const deleteNoteHandler = () => {\n    // todo: create delete function on cross icon\n    console.log(\"Nothing to do\");\n  };\n\n  return /*#__PURE__*/React.createElement(Rnd, {\n    ref: rnd,\n    className: `note${transformNote ? '-activate' : ''}`,\n    disableDragging: transformNote,\n    style: { ...style\n    },\n    size: {\n      width: notes[noteIndex].width,\n      height: notes[noteIndex].height\n    },\n    minWidth: 250,\n    minHeight: 250,\n    position: {\n      x: notes[noteIndex].x,\n      y: notes[noteIndex].y\n    },\n    onDragStop: onDragStopHandler,\n    onResizeStop: onResizeStopHandler,\n    bounds: \"window\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"note-header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"color-buttons\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn btn-success\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn btn-danger\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn btn-secondary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"cross\",\n    onClick: deleteNoteHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 17\n    }\n  }, \"\\xD7\")), transformNote ? /*#__PURE__*/React.createElement(\"textarea\", {\n    className: \"note-text\",\n    style: {\n      backgroundColor: notes[noteIndex].color || \"grey\"\n    },\n    value: text,\n    onChange: e => setText(e.target.value),\n    onDoubleClick: () => setTransformNote(false),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 25\n    }\n  }) : /*#__PURE__*/React.createElement(\"div\", {\n    className: \"note-body\",\n    style: {\n      backgroundColor: notes[noteIndex].color || \"grey\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 25\n    }\n  }, text));\n};\n\nexport default Note;","map":{"version":3,"sources":["/home/deathsmell/WebstormProjects/i-note-common/src/components/Note.js"],"names":["React","useEffect","useRef","useState","Rnd","useNote","useLocal","TypeMessage","style","display","alignItems","justifyContent","border","background","Note","note","noteIndex","noteId","serverText","notes","setNotes","connection","rnd","transformNote","setTransformNote","text","setText","removeInLocal","saveInLocal","getFromLocal","updateNote","updateStateNotes","index","updatedNote","prev","filter","id","sendNewPosition","type","send","JSON","stringify","watchNotes","console","log","onDragStopHandler","event","data","x","y","UPDATE","onResizeStopHandler","e","direction","ref","delta","position","width","height","deleteNoteHandler","backgroundColor","color","target","value"],"mappings":"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","sourcesContent":["import React, {useEffect, useRef, useState} from \"react\"\nimport {Rnd} from \"react-rnd\"\nimport useNote from \"../hooks/note.hook\";\nimport useLocal from \"../hooks/local.hook\";\nimport {TypeMessage} from \"../hooks/TypeMessage\";\n\nconst style = {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    border: \"solid 1px #ddd\",\n    background: \"#f0f0f0\",\n};\n\nconst Note = ({note,noteIndex, noteId, serverText, notes, setNotes, connection}) => {\n\n\n    const rnd = useRef();\n    const [transformNote, setTransformNote] = useState(false);\n    const [text, setText] = useState(serverText);\n    const {removeInLocal, saveInLocal, getFromLocal} = useLocal();\n    const {updateNote} = useNote();\n\n    const updateStateNotes = (index,updatedNote) => {\n        setNotes((prev) => [...prev.filter(note => note.id !== updatedNote.id), updatedNote])\n    }\n    const sendNewPosition = (type, note) => connection.send(JSON.stringify({...note, type}))\n\n\n\n    useEffect(function watchNotes() {\n        console.log('Update notes',notes)\n    },[notes])\n\n\n    const onDragStopHandler = (event, data) => {\n        const updatedNote = updateNote(note, {x: data.x, y: data.y});\n        saveInLocal(noteId, updatedNote)\n        updateStateNotes(noteIndex,updatedNote)\n        sendNewPosition(TypeMessage.UPDATE, updatedNote)\n    }\n\n    const onResizeStopHandler = (e, direction, ref, delta, position) => {\n        const updatedNote = updateNote(note, {\n            width: ref.style.width,\n            height: ref.style.height,\n            x: position.x,\n            y: position.y\n        });\n        saveInLocal(noteId, updatedNote)\n        updateStateNotes(noteId,updatedNote)\n        sendNewPosition(TypeMessage.UPDATE, updatedNote)\n    }\n\n    const deleteNoteHandler = () => {\n        // todo: create delete function on cross icon\n        console.log(\"Nothing to do\")\n    }\n\n    return (\n        <Rnd\n            ref={rnd}\n            className={`note${transformNote ? '-activate' : ''}`}\n            disableDragging={transformNote}\n            style={{...style}}\n            size={{width: notes[noteIndex].width, height: notes[noteIndex].height}}\n            minWidth={250}\n            minHeight={250}\n            position={{x: notes[noteIndex].x, y: notes[noteIndex].y}}\n            onDragStop={onDragStopHandler}\n            onResizeStop={onResizeStopHandler}\n            bounds={\"window\"}\n        >\n            <div className=\"note-header\">\n                <div className=\"color-buttons\">\n                    <button className=\"btn btn-success\"/>\n                    <button className=\"btn btn-danger\"/>\n                    <button className=\"btn btn-secondary\"/>\n                </div>\n                <div className=\"cross\"\n                     onClick={deleteNoteHandler}\n                >\n                    &times;\n                </div>\n            </div>\n            {\n                transformNote\n                    ?\n                    (\n                        <textarea\n                            className=\"note-text\"\n                            style={{backgroundColor: notes[noteIndex].color || \"grey\"}}\n                            value={text}\n                            onChange={(e) => setText(e.target.value)}\n                            onDoubleClick={() => setTransformNote(false)}\n                        >\n\n                            </textarea>\n                    )\n                    : (\n                        <div className=\"note-body\"\n                             style={{backgroundColor: notes[noteIndex].color || \"grey\"}}\n                        >\n                            {text}\n                        </div>\n                    )\n            }\n        </Rnd>\n    )\n}\n\nexport default Note"]},"metadata":{},"sourceType":"module"}